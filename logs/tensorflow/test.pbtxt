node {
  name: "image_input"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "box_mask"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1372
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "box_delta_input"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1372
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "box_input"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1372
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "labels"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1372
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "iou/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1372
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "iou"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1372
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "iou/Assign"
  op: "Assign"
  input: "iou"
  input: "iou/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iou"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "iou/read"
  op: "Identity"
  input: "iou"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iou"
      }
    }
  }
}
node {
  name: "fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:GPU:0"
  attr {
    key: "capacity"
    value {
      i: 100
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 224
          }
          dim {
            size: 224
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fifo_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "fifo_queue"
  input: "image_input"
  input: "box_mask"
  input: "box_delta_input"
  input: "box_input"
  input: "labels"
  device: "/device:GPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "fifo_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "fifo_queue"
  device: "/device:GPU:0"
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:GPU:0"
  attr {
    key: "capacity"
    value {
      i: 100
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 224
          }
          dim {
            size: 224
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1372
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "fifo_queue_Dequeue"
  input: "fifo_queue_Dequeue:1"
  input: "fifo_queue_Dequeue:2"
  input: "fifo_queue_Dequeue:3"
  input: "fifo_queue_Dequeue:4"
  device: "/device:GPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:GPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:GPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
  device: "/device:GPU:0"
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch/fraction_of_100_full/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_100_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_100_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_100_full/tags"
  input: "batch/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  device: "/device:GPU:0"
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire1/conv3x3/kernels"
  input: "fire1/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/read"
  op: "Identity"
  input: "fire1/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire1/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire1/conv3x3/weight_loss"
  op: "Mul"
  input: "fire1/conv3x3/L2Loss"
  input: "fire1/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire1/conv3x3/biases"
  input: "fire1/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/conv3x3/biases/read"
  op: "Identity"
  input: "fire1/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/convolution"
  op: "Conv2D"
  input: "batch"
  input: "fire1/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire1/conv3x3/convolution"
  input: "fire1/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire1/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/before_bn"
      }
    }
  }
}
node {
  name: "fire1/before_bn"
  op: "HistogramSummary"
  input: "fire1/before_bn/tag"
  input: "fire1/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/beta/Assign"
  op: "Assign"
  input: "fire1/bn/beta"
  input: "fire1/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/beta/read"
  op: "Identity"
  input: "fire1/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
}
node {
  name: "fire1/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/gamma/Assign"
  op: "Assign"
  input: "fire1/bn/gamma"
  input: "fire1/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/gamma/read"
  op: "Identity"
  input: "fire1/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
}
node {
  name: "fire1/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire1/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire1/bn/bn_gamma/tag"
  input: "fire1/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire1/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire1/bn/bn_beta/tag"
  input: "fire1/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire1/bn/moments/mean"
  op: "Mean"
  input: "fire1/conv3x3/bias_add"
  input: "fire1/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire1/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire1/conv3x3/bias_add"
  input: "fire1/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire1/bn/moments/variance"
  op: "Mean"
  input: "fire1/bn/moments/SquaredDifference"
  input: "fire1/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire1/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire1/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire1/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire1/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire1/bn/moving_mean"
  input: "fire1/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/moving_mean/read"
  op: "Identity"
  input: "fire1/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire1/bn/moving_variance"
  input: "fire1/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/moving_variance/read"
  op: "Identity"
  input: "fire1/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  input: "fire1/bn/fire1/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub"
  op: "Sub"
  input: "fire1/bn/fire1/bn/moving_mean/biased/read"
  input: "fire1/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/mul"
  op: "Mul"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub"
  input: "fire1/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/fire1/bn/fire1/bn/moving_mean"
  op: "AssignSub"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/fire1/bn/fire1/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/fire1/bn/fire1/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_1/x"
  input: "fire1/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/fire1/bn/fire1/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_1"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/fire1/bn/fire1/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_2/x"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/read"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire1/bn/moving_mean/read"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire1/bn/moving_mean"
  input: "fire1/bn/AssignMovingAvg/fire1/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  input: "fire1/bn/fire1/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/fire1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub"
  op: "Sub"
  input: "fire1/bn/fire1/bn/moving_variance/biased/read"
  input: "fire1/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/mul"
  op: "Mul"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub"
  input: "fire1/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/fire1/bn/fire1/bn/moving_variance"
  op: "AssignSub"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/read"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/fire1/bn/fire1/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/fire1/bn/fire1/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_1/x"
  input: "fire1/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/fire1/bn/fire1/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_1"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/AssignAdd"
  input: "^fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/fire1/bn/fire1/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_2/x"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/read"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire1/bn/moving_variance/read"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire1/bn/moving_variance"
  input: "fire1/bn/AssignMovingAvg_1/fire1/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire1/bn/AssignMovingAvg"
  input: "^fire1/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire1/bn/batchnorm/add"
  op: "Add"
  input: "fire1/bn/moments/Squeeze_1"
  input: "fire1/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire1/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/mul"
  op: "Mul"
  input: "fire1/bn/batchnorm/Rsqrt"
  input: "fire1/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire1/conv3x3/bias_add"
  input: "fire1/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire1/bn/moments/Squeeze"
  input: "fire1/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/sub"
  op: "Sub"
  input: "fire1/bn/beta/read"
  input: "fire1/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/batchnorm/add_1"
  op: "Add"
  input: "fire1/bn/batchnorm/mul_1"
  input: "fire1/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/before_relu"
      }
    }
  }
}
node {
  name: "fire1/before_relu"
  op: "HistogramSummary"
  input: "fire1/before_relu/tag"
  input: "fire1/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/Rint"
  op: "Rint"
  input: "fire1/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire1/Rint_1"
  op: "Rint"
  input: "fire1/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire1/mul"
  op: "Mul"
  input: "fire1/mul/x"
  input: "fire1/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire1/truediv"
  op: "RealDiv"
  input: "fire1/mul"
  input: "fire1/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/Rint_2"
  op: "Rint"
  input: "fire1/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire1/Rint_2"
  input: "fire1/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/clip_by_value"
  op: "Maximum"
  input: "fire1/clip_by_value/Minimum"
  input: "fire1/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire1/truediv_1"
  op: "RealDiv"
  input: "fire1/clip_by_value"
  input: "fire1/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire1/mul_1"
  op: "Mul"
  input: "fire1/truediv_1"
  input: "fire1/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire1/bn/batchnorm/add_1"
  input: "fire1/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/clip_by_value_1"
  op: "Maximum"
  input: "fire1/clip_by_value_1/Minimum"
  input: "fire1/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/sub"
  op: "Sub"
  input: "fire1/mul_1"
  input: "fire1/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/StopGradient"
  op: "StopGradient"
  input: "fire1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/add"
  op: "Add"
  input: "fire1/clip_by_value_1"
  input: "fire1/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/Relu"
  op: "Relu"
  input: "fire1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/after_relu"
      }
    }
  }
}
node {
  name: "fire1/after_relu"
  op: "HistogramSummary"
  input: "fire1/after_relu/tag"
  input: "fire1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/pool/MaxPool"
  op: "MaxPool"
  input: "fire1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "fire1/pool_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/pool_1"
      }
    }
  }
}
node {
  name: "fire1/pool_1"
  op: "HistogramSummary"
  input: "fire1/pool_1/tag"
  input: "fire1/pool/MaxPool"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire2/conv3x3/kernels"
  input: "fire2/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/read"
  op: "Identity"
  input: "fire2/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire2/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire2/conv3x3/weight_loss"
  op: "Mul"
  input: "fire2/conv3x3/L2Loss"
  input: "fire2/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire2/conv3x3/biases"
  input: "fire2/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/conv3x3/biases/read"
  op: "Identity"
  input: "fire2/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/convolution"
  op: "Conv2D"
  input: "fire1/pool/MaxPool"
  input: "fire2/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire2/conv3x3/convolution"
  input: "fire2/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire2/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/before_bn"
      }
    }
  }
}
node {
  name: "fire2/before_bn"
  op: "HistogramSummary"
  input: "fire2/before_bn/tag"
  input: "fire2/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/beta/Assign"
  op: "Assign"
  input: "fire2/bn/beta"
  input: "fire2/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/beta/read"
  op: "Identity"
  input: "fire2/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
}
node {
  name: "fire2/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/gamma/Assign"
  op: "Assign"
  input: "fire2/bn/gamma"
  input: "fire2/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/gamma/read"
  op: "Identity"
  input: "fire2/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
}
node {
  name: "fire2/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire2/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire2/bn/bn_gamma/tag"
  input: "fire2/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire2/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire2/bn/bn_beta/tag"
  input: "fire2/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire2/bn/moments/mean"
  op: "Mean"
  input: "fire2/conv3x3/bias_add"
  input: "fire2/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire2/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire2/conv3x3/bias_add"
  input: "fire2/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire2/bn/moments/variance"
  op: "Mean"
  input: "fire2/bn/moments/SquaredDifference"
  input: "fire2/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire2/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire2/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire2/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire2/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire2/bn/moving_mean"
  input: "fire2/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/moving_mean/read"
  op: "Identity"
  input: "fire2/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire2/bn/moving_variance"
  input: "fire2/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/moving_variance/read"
  op: "Identity"
  input: "fire2/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  input: "fire2/bn/fire2/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub"
  op: "Sub"
  input: "fire2/bn/fire2/bn/moving_mean/biased/read"
  input: "fire2/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/mul"
  op: "Mul"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub"
  input: "fire2/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/fire2/bn/fire2/bn/moving_mean"
  op: "AssignSub"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/fire2/bn/fire2/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/fire2/bn/fire2/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_1/x"
  input: "fire2/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/fire2/bn/fire2/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_1"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/fire2/bn/fire2/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_2/x"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/read"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire2/bn/moving_mean/read"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire2/bn/moving_mean"
  input: "fire2/bn/AssignMovingAvg/fire2/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  input: "fire2/bn/fire2/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/fire2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub"
  op: "Sub"
  input: "fire2/bn/fire2/bn/moving_variance/biased/read"
  input: "fire2/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/mul"
  op: "Mul"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub"
  input: "fire2/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/fire2/bn/fire2/bn/moving_variance"
  op: "AssignSub"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/read"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/fire2/bn/fire2/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/fire2/bn/fire2/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_1/x"
  input: "fire2/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/fire2/bn/fire2/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_1"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/AssignAdd"
  input: "^fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/fire2/bn/fire2/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_2/x"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/read"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire2/bn/moving_variance/read"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire2/bn/moving_variance"
  input: "fire2/bn/AssignMovingAvg_1/fire2/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire2/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire2/bn/AssignMovingAvg"
  input: "^fire2/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire2/bn/batchnorm/add"
  op: "Add"
  input: "fire2/bn/moments/Squeeze_1"
  input: "fire2/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire2/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/mul"
  op: "Mul"
  input: "fire2/bn/batchnorm/Rsqrt"
  input: "fire2/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire2/conv3x3/bias_add"
  input: "fire2/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire2/bn/moments/Squeeze"
  input: "fire2/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/sub"
  op: "Sub"
  input: "fire2/bn/beta/read"
  input: "fire2/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/batchnorm/add_1"
  op: "Add"
  input: "fire2/bn/batchnorm/mul_1"
  input: "fire2/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/before_relu"
      }
    }
  }
}
node {
  name: "fire2/before_relu"
  op: "HistogramSummary"
  input: "fire2/before_relu/tag"
  input: "fire2/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/Rint"
  op: "Rint"
  input: "fire2/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire2/Rint_1"
  op: "Rint"
  input: "fire2/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire2/mul"
  op: "Mul"
  input: "fire2/mul/x"
  input: "fire2/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire2/truediv"
  op: "RealDiv"
  input: "fire2/mul"
  input: "fire2/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/Rint_2"
  op: "Rint"
  input: "fire2/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire2/Rint_2"
  input: "fire2/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/clip_by_value"
  op: "Maximum"
  input: "fire2/clip_by_value/Minimum"
  input: "fire2/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire2/truediv_1"
  op: "RealDiv"
  input: "fire2/clip_by_value"
  input: "fire2/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire2/mul_1"
  op: "Mul"
  input: "fire2/truediv_1"
  input: "fire2/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire2/bn/batchnorm/add_1"
  input: "fire2/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/clip_by_value_1"
  op: "Maximum"
  input: "fire2/clip_by_value_1/Minimum"
  input: "fire2/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/sub"
  op: "Sub"
  input: "fire2/mul_1"
  input: "fire2/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/StopGradient"
  op: "StopGradient"
  input: "fire2/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/add"
  op: "Add"
  input: "fire2/clip_by_value_1"
  input: "fire2/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/Relu"
  op: "Relu"
  input: "fire2/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/after_relu"
      }
    }
  }
}
node {
  name: "fire2/after_relu"
  op: "HistogramSummary"
  input: "fire2/after_relu/tag"
  input: "fire2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/pool/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/pool"
      }
    }
  }
}
node {
  name: "fire2/pool"
  op: "HistogramSummary"
  input: "fire2/pool/tag"
  input: "fire2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire3/conv3x3/kernels"
  input: "fire3/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/read"
  op: "Identity"
  input: "fire3/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire3/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire3/conv3x3/weight_loss"
  op: "Mul"
  input: "fire3/conv3x3/L2Loss"
  input: "fire3/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire3/conv3x3/biases"
  input: "fire3/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/conv3x3/biases/read"
  op: "Identity"
  input: "fire3/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/convolution"
  op: "Conv2D"
  input: "fire2/Relu"
  input: "fire3/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire3/conv3x3/convolution"
  input: "fire3/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire3/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/before_bn"
      }
    }
  }
}
node {
  name: "fire3/before_bn"
  op: "HistogramSummary"
  input: "fire3/before_bn/tag"
  input: "fire3/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/beta/Assign"
  op: "Assign"
  input: "fire3/bn/beta"
  input: "fire3/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/beta/read"
  op: "Identity"
  input: "fire3/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
}
node {
  name: "fire3/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/gamma/Assign"
  op: "Assign"
  input: "fire3/bn/gamma"
  input: "fire3/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/gamma/read"
  op: "Identity"
  input: "fire3/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
}
node {
  name: "fire3/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire3/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire3/bn/bn_gamma/tag"
  input: "fire3/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire3/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire3/bn/bn_beta/tag"
  input: "fire3/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire3/bn/moments/mean"
  op: "Mean"
  input: "fire3/conv3x3/bias_add"
  input: "fire3/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire3/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire3/conv3x3/bias_add"
  input: "fire3/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire3/bn/moments/variance"
  op: "Mean"
  input: "fire3/bn/moments/SquaredDifference"
  input: "fire3/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire3/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire3/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire3/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire3/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire3/bn/moving_mean"
  input: "fire3/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/moving_mean/read"
  op: "Identity"
  input: "fire3/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire3/bn/moving_variance"
  input: "fire3/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/moving_variance/read"
  op: "Identity"
  input: "fire3/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  input: "fire3/bn/fire3/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub"
  op: "Sub"
  input: "fire3/bn/fire3/bn/moving_mean/biased/read"
  input: "fire3/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/mul"
  op: "Mul"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub"
  input: "fire3/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/fire3/bn/fire3/bn/moving_mean"
  op: "AssignSub"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/fire3/bn/fire3/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/fire3/bn/fire3/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_1/x"
  input: "fire3/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/fire3/bn/fire3/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_1"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/fire3/bn/fire3/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_2/x"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/read"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire3/bn/moving_mean/read"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire3/bn/moving_mean"
  input: "fire3/bn/AssignMovingAvg/fire3/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  input: "fire3/bn/fire3/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/fire3/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub"
  op: "Sub"
  input: "fire3/bn/fire3/bn/moving_variance/biased/read"
  input: "fire3/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/mul"
  op: "Mul"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub"
  input: "fire3/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/fire3/bn/fire3/bn/moving_variance"
  op: "AssignSub"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/read"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/fire3/bn/fire3/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/fire3/bn/fire3/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_1/x"
  input: "fire3/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/fire3/bn/fire3/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_1"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/AssignAdd"
  input: "^fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/fire3/bn/fire3/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_2/x"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/read"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire3/bn/moving_variance/read"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire3/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire3/bn/moving_variance"
  input: "fire3/bn/AssignMovingAvg_1/fire3/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire3/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire3/bn/AssignMovingAvg"
  input: "^fire3/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire3/bn/batchnorm/add"
  op: "Add"
  input: "fire3/bn/moments/Squeeze_1"
  input: "fire3/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire3/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/mul"
  op: "Mul"
  input: "fire3/bn/batchnorm/Rsqrt"
  input: "fire3/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire3/conv3x3/bias_add"
  input: "fire3/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire3/bn/moments/Squeeze"
  input: "fire3/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/sub"
  op: "Sub"
  input: "fire3/bn/beta/read"
  input: "fire3/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/batchnorm/add_1"
  op: "Add"
  input: "fire3/bn/batchnorm/mul_1"
  input: "fire3/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/before_relu"
      }
    }
  }
}
node {
  name: "fire3/before_relu"
  op: "HistogramSummary"
  input: "fire3/before_relu/tag"
  input: "fire3/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/Rint"
  op: "Rint"
  input: "fire3/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire3/Rint_1"
  op: "Rint"
  input: "fire3/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire3/mul"
  op: "Mul"
  input: "fire3/mul/x"
  input: "fire3/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire3/truediv"
  op: "RealDiv"
  input: "fire3/mul"
  input: "fire3/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/Rint_2"
  op: "Rint"
  input: "fire3/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire3/Rint_2"
  input: "fire3/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/clip_by_value"
  op: "Maximum"
  input: "fire3/clip_by_value/Minimum"
  input: "fire3/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire3/truediv_1"
  op: "RealDiv"
  input: "fire3/clip_by_value"
  input: "fire3/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire3/mul_1"
  op: "Mul"
  input: "fire3/truediv_1"
  input: "fire3/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire3/bn/batchnorm/add_1"
  input: "fire3/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/clip_by_value_1"
  op: "Maximum"
  input: "fire3/clip_by_value_1/Minimum"
  input: "fire3/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/sub"
  op: "Sub"
  input: "fire3/mul_1"
  input: "fire3/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/StopGradient"
  op: "StopGradient"
  input: "fire3/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/add"
  op: "Add"
  input: "fire3/clip_by_value_1"
  input: "fire3/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/Relu"
  op: "Relu"
  input: "fire3/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/after_relu"
      }
    }
  }
}
node {
  name: "fire3/after_relu"
  op: "HistogramSummary"
  input: "fire3/after_relu/tag"
  input: "fire3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/pool/MaxPool"
  op: "MaxPool"
  input: "fire3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "fire3/pool_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/pool_1"
      }
    }
  }
}
node {
  name: "fire3/pool_1"
  op: "HistogramSummary"
  input: "fire3/pool_1/tag"
  input: "fire3/pool/MaxPool"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire4/conv3x3/kernels"
  input: "fire4/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/read"
  op: "Identity"
  input: "fire4/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire4/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire4/conv3x3/weight_loss"
  op: "Mul"
  input: "fire4/conv3x3/L2Loss"
  input: "fire4/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire4/conv3x3/biases"
  input: "fire4/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/conv3x3/biases/read"
  op: "Identity"
  input: "fire4/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/convolution"
  op: "Conv2D"
  input: "fire3/pool/MaxPool"
  input: "fire4/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire4/conv3x3/convolution"
  input: "fire4/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire4/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/before_bn"
      }
    }
  }
}
node {
  name: "fire4/before_bn"
  op: "HistogramSummary"
  input: "fire4/before_bn/tag"
  input: "fire4/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/beta/Assign"
  op: "Assign"
  input: "fire4/bn/beta"
  input: "fire4/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/beta/read"
  op: "Identity"
  input: "fire4/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
}
node {
  name: "fire4/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/gamma/Assign"
  op: "Assign"
  input: "fire4/bn/gamma"
  input: "fire4/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/gamma/read"
  op: "Identity"
  input: "fire4/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
}
node {
  name: "fire4/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire4/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire4/bn/bn_gamma/tag"
  input: "fire4/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire4/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire4/bn/bn_beta/tag"
  input: "fire4/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire4/bn/moments/mean"
  op: "Mean"
  input: "fire4/conv3x3/bias_add"
  input: "fire4/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire4/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire4/conv3x3/bias_add"
  input: "fire4/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire4/bn/moments/variance"
  op: "Mean"
  input: "fire4/bn/moments/SquaredDifference"
  input: "fire4/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire4/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire4/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire4/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire4/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire4/bn/moving_mean"
  input: "fire4/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/moving_mean/read"
  op: "Identity"
  input: "fire4/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire4/bn/moving_variance"
  input: "fire4/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/moving_variance/read"
  op: "Identity"
  input: "fire4/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  input: "fire4/bn/fire4/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub"
  op: "Sub"
  input: "fire4/bn/fire4/bn/moving_mean/biased/read"
  input: "fire4/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/mul"
  op: "Mul"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub"
  input: "fire4/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/fire4/bn/fire4/bn/moving_mean"
  op: "AssignSub"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/fire4/bn/fire4/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/fire4/bn/fire4/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_1/x"
  input: "fire4/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/fire4/bn/fire4/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_1"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/fire4/bn/fire4/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_2/x"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/read"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire4/bn/moving_mean/read"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire4/bn/moving_mean"
  input: "fire4/bn/AssignMovingAvg/fire4/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  input: "fire4/bn/fire4/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/fire4/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub"
  op: "Sub"
  input: "fire4/bn/fire4/bn/moving_variance/biased/read"
  input: "fire4/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/mul"
  op: "Mul"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub"
  input: "fire4/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/fire4/bn/fire4/bn/moving_variance"
  op: "AssignSub"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/read"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/fire4/bn/fire4/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/fire4/bn/fire4/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_1/x"
  input: "fire4/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/fire4/bn/fire4/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_1"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/AssignAdd"
  input: "^fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/fire4/bn/fire4/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_2/x"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/read"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire4/bn/moving_variance/read"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire4/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire4/bn/moving_variance"
  input: "fire4/bn/AssignMovingAvg_1/fire4/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire4/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire4/bn/AssignMovingAvg"
  input: "^fire4/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire4/bn/batchnorm/add"
  op: "Add"
  input: "fire4/bn/moments/Squeeze_1"
  input: "fire4/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire4/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/mul"
  op: "Mul"
  input: "fire4/bn/batchnorm/Rsqrt"
  input: "fire4/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire4/conv3x3/bias_add"
  input: "fire4/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire4/bn/moments/Squeeze"
  input: "fire4/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/sub"
  op: "Sub"
  input: "fire4/bn/beta/read"
  input: "fire4/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/batchnorm/add_1"
  op: "Add"
  input: "fire4/bn/batchnorm/mul_1"
  input: "fire4/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/before_relu"
      }
    }
  }
}
node {
  name: "fire4/before_relu"
  op: "HistogramSummary"
  input: "fire4/before_relu/tag"
  input: "fire4/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/Rint"
  op: "Rint"
  input: "fire4/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire4/Rint_1"
  op: "Rint"
  input: "fire4/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire4/mul"
  op: "Mul"
  input: "fire4/mul/x"
  input: "fire4/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire4/truediv"
  op: "RealDiv"
  input: "fire4/mul"
  input: "fire4/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/Rint_2"
  op: "Rint"
  input: "fire4/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire4/Rint_2"
  input: "fire4/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/clip_by_value"
  op: "Maximum"
  input: "fire4/clip_by_value/Minimum"
  input: "fire4/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire4/truediv_1"
  op: "RealDiv"
  input: "fire4/clip_by_value"
  input: "fire4/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire4/mul_1"
  op: "Mul"
  input: "fire4/truediv_1"
  input: "fire4/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire4/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire4/bn/batchnorm/add_1"
  input: "fire4/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/clip_by_value_1"
  op: "Maximum"
  input: "fire4/clip_by_value_1/Minimum"
  input: "fire4/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/sub"
  op: "Sub"
  input: "fire4/mul_1"
  input: "fire4/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/StopGradient"
  op: "StopGradient"
  input: "fire4/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/add"
  op: "Add"
  input: "fire4/clip_by_value_1"
  input: "fire4/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/Relu"
  op: "Relu"
  input: "fire4/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/after_relu"
      }
    }
  }
}
node {
  name: "fire4/after_relu"
  op: "HistogramSummary"
  input: "fire4/after_relu/tag"
  input: "fire4/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/pool/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/pool"
      }
    }
  }
}
node {
  name: "fire4/pool"
  op: "HistogramSummary"
  input: "fire4/pool/tag"
  input: "fire4/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire5/conv3x3/kernels"
  input: "fire5/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/read"
  op: "Identity"
  input: "fire5/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire5/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire5/conv3x3/weight_loss"
  op: "Mul"
  input: "fire5/conv3x3/L2Loss"
  input: "fire5/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire5/conv3x3/biases"
  input: "fire5/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/conv3x3/biases/read"
  op: "Identity"
  input: "fire5/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/convolution"
  op: "Conv2D"
  input: "fire4/Relu"
  input: "fire5/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire5/conv3x3/convolution"
  input: "fire5/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire5/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/before_bn"
      }
    }
  }
}
node {
  name: "fire5/before_bn"
  op: "HistogramSummary"
  input: "fire5/before_bn/tag"
  input: "fire5/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/beta/Assign"
  op: "Assign"
  input: "fire5/bn/beta"
  input: "fire5/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/beta/read"
  op: "Identity"
  input: "fire5/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
}
node {
  name: "fire5/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/gamma/Assign"
  op: "Assign"
  input: "fire5/bn/gamma"
  input: "fire5/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/gamma/read"
  op: "Identity"
  input: "fire5/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
}
node {
  name: "fire5/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire5/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire5/bn/bn_gamma/tag"
  input: "fire5/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire5/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire5/bn/bn_beta/tag"
  input: "fire5/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire5/bn/moments/mean"
  op: "Mean"
  input: "fire5/conv3x3/bias_add"
  input: "fire5/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire5/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire5/conv3x3/bias_add"
  input: "fire5/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire5/bn/moments/variance"
  op: "Mean"
  input: "fire5/bn/moments/SquaredDifference"
  input: "fire5/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire5/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire5/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire5/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire5/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire5/bn/moving_mean"
  input: "fire5/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/moving_mean/read"
  op: "Identity"
  input: "fire5/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire5/bn/moving_variance"
  input: "fire5/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/moving_variance/read"
  op: "Identity"
  input: "fire5/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  input: "fire5/bn/fire5/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub"
  op: "Sub"
  input: "fire5/bn/fire5/bn/moving_mean/biased/read"
  input: "fire5/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/mul"
  op: "Mul"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub"
  input: "fire5/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/fire5/bn/fire5/bn/moving_mean"
  op: "AssignSub"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/fire5/bn/fire5/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/fire5/bn/fire5/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_1/x"
  input: "fire5/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/fire5/bn/fire5/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_1"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/fire5/bn/fire5/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_2/x"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/read"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire5/bn/moving_mean/read"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire5/bn/moving_mean"
  input: "fire5/bn/AssignMovingAvg/fire5/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  input: "fire5/bn/fire5/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/fire5/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub"
  op: "Sub"
  input: "fire5/bn/fire5/bn/moving_variance/biased/read"
  input: "fire5/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/mul"
  op: "Mul"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub"
  input: "fire5/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/fire5/bn/fire5/bn/moving_variance"
  op: "AssignSub"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/read"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/fire5/bn/fire5/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/fire5/bn/fire5/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_1/x"
  input: "fire5/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/fire5/bn/fire5/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_1"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/AssignAdd"
  input: "^fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/fire5/bn/fire5/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_2/x"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/read"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire5/bn/moving_variance/read"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire5/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire5/bn/moving_variance"
  input: "fire5/bn/AssignMovingAvg_1/fire5/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire5/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire5/bn/AssignMovingAvg"
  input: "^fire5/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire5/bn/batchnorm/add"
  op: "Add"
  input: "fire5/bn/moments/Squeeze_1"
  input: "fire5/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire5/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/mul"
  op: "Mul"
  input: "fire5/bn/batchnorm/Rsqrt"
  input: "fire5/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire5/conv3x3/bias_add"
  input: "fire5/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire5/bn/moments/Squeeze"
  input: "fire5/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/sub"
  op: "Sub"
  input: "fire5/bn/beta/read"
  input: "fire5/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/batchnorm/add_1"
  op: "Add"
  input: "fire5/bn/batchnorm/mul_1"
  input: "fire5/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/before_relu"
      }
    }
  }
}
node {
  name: "fire5/before_relu"
  op: "HistogramSummary"
  input: "fire5/before_relu/tag"
  input: "fire5/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/Rint"
  op: "Rint"
  input: "fire5/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire5/Rint_1"
  op: "Rint"
  input: "fire5/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire5/mul"
  op: "Mul"
  input: "fire5/mul/x"
  input: "fire5/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire5/truediv"
  op: "RealDiv"
  input: "fire5/mul"
  input: "fire5/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/Rint_2"
  op: "Rint"
  input: "fire5/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire5/Rint_2"
  input: "fire5/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/clip_by_value"
  op: "Maximum"
  input: "fire5/clip_by_value/Minimum"
  input: "fire5/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire5/truediv_1"
  op: "RealDiv"
  input: "fire5/clip_by_value"
  input: "fire5/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire5/mul_1"
  op: "Mul"
  input: "fire5/truediv_1"
  input: "fire5/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire5/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire5/bn/batchnorm/add_1"
  input: "fire5/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/clip_by_value_1"
  op: "Maximum"
  input: "fire5/clip_by_value_1/Minimum"
  input: "fire5/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/sub"
  op: "Sub"
  input: "fire5/mul_1"
  input: "fire5/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/StopGradient"
  op: "StopGradient"
  input: "fire5/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/add"
  op: "Add"
  input: "fire5/clip_by_value_1"
  input: "fire5/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/Relu"
  op: "Relu"
  input: "fire5/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/after_relu"
      }
    }
  }
}
node {
  name: "fire5/after_relu"
  op: "HistogramSummary"
  input: "fire5/after_relu/tag"
  input: "fire5/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/pool/MaxPool"
  op: "MaxPool"
  input: "fire5/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "fire5/pool_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/pool_1"
      }
    }
  }
}
node {
  name: "fire5/pool_1"
  op: "HistogramSummary"
  input: "fire5/pool_1/tag"
  input: "fire5/pool/MaxPool"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire6/conv3x3/kernels"
  input: "fire6/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/read"
  op: "Identity"
  input: "fire6/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire6/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire6/conv3x3/weight_loss"
  op: "Mul"
  input: "fire6/conv3x3/L2Loss"
  input: "fire6/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire6/conv3x3/biases"
  input: "fire6/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/conv3x3/biases/read"
  op: "Identity"
  input: "fire6/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/convolution"
  op: "Conv2D"
  input: "fire5/pool/MaxPool"
  input: "fire6/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire6/conv3x3/convolution"
  input: "fire6/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire6/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/before_bn"
      }
    }
  }
}
node {
  name: "fire6/before_bn"
  op: "HistogramSummary"
  input: "fire6/before_bn/tag"
  input: "fire6/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/beta/Assign"
  op: "Assign"
  input: "fire6/bn/beta"
  input: "fire6/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/beta/read"
  op: "Identity"
  input: "fire6/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
}
node {
  name: "fire6/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/gamma/Assign"
  op: "Assign"
  input: "fire6/bn/gamma"
  input: "fire6/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/gamma/read"
  op: "Identity"
  input: "fire6/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
}
node {
  name: "fire6/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire6/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire6/bn/bn_gamma/tag"
  input: "fire6/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire6/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire6/bn/bn_beta/tag"
  input: "fire6/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire6/bn/moments/mean"
  op: "Mean"
  input: "fire6/conv3x3/bias_add"
  input: "fire6/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire6/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire6/conv3x3/bias_add"
  input: "fire6/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire6/bn/moments/variance"
  op: "Mean"
  input: "fire6/bn/moments/SquaredDifference"
  input: "fire6/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire6/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire6/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire6/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire6/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire6/bn/moving_mean"
  input: "fire6/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/moving_mean/read"
  op: "Identity"
  input: "fire6/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire6/bn/moving_variance"
  input: "fire6/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/moving_variance/read"
  op: "Identity"
  input: "fire6/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  input: "fire6/bn/fire6/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub"
  op: "Sub"
  input: "fire6/bn/fire6/bn/moving_mean/biased/read"
  input: "fire6/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/mul"
  op: "Mul"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub"
  input: "fire6/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/fire6/bn/fire6/bn/moving_mean"
  op: "AssignSub"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/fire6/bn/fire6/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/fire6/bn/fire6/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_1/x"
  input: "fire6/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/fire6/bn/fire6/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_1"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/fire6/bn/fire6/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_2/x"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/read"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire6/bn/moving_mean/read"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire6/bn/moving_mean"
  input: "fire6/bn/AssignMovingAvg/fire6/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  input: "fire6/bn/fire6/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/fire6/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub"
  op: "Sub"
  input: "fire6/bn/fire6/bn/moving_variance/biased/read"
  input: "fire6/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/mul"
  op: "Mul"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub"
  input: "fire6/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/fire6/bn/fire6/bn/moving_variance"
  op: "AssignSub"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/read"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/fire6/bn/fire6/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/fire6/bn/fire6/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_1/x"
  input: "fire6/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/fire6/bn/fire6/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_1"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/AssignAdd"
  input: "^fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/fire6/bn/fire6/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_2/x"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/read"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire6/bn/moving_variance/read"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire6/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire6/bn/moving_variance"
  input: "fire6/bn/AssignMovingAvg_1/fire6/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire6/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire6/bn/AssignMovingAvg"
  input: "^fire6/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire6/bn/batchnorm/add"
  op: "Add"
  input: "fire6/bn/moments/Squeeze_1"
  input: "fire6/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire6/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/mul"
  op: "Mul"
  input: "fire6/bn/batchnorm/Rsqrt"
  input: "fire6/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire6/conv3x3/bias_add"
  input: "fire6/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire6/bn/moments/Squeeze"
  input: "fire6/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/sub"
  op: "Sub"
  input: "fire6/bn/beta/read"
  input: "fire6/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/batchnorm/add_1"
  op: "Add"
  input: "fire6/bn/batchnorm/mul_1"
  input: "fire6/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/before_relu"
      }
    }
  }
}
node {
  name: "fire6/before_relu"
  op: "HistogramSummary"
  input: "fire6/before_relu/tag"
  input: "fire6/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/Rint"
  op: "Rint"
  input: "fire6/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire6/Rint_1"
  op: "Rint"
  input: "fire6/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire6/mul"
  op: "Mul"
  input: "fire6/mul/x"
  input: "fire6/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire6/truediv"
  op: "RealDiv"
  input: "fire6/mul"
  input: "fire6/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/Rint_2"
  op: "Rint"
  input: "fire6/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire6/Rint_2"
  input: "fire6/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/clip_by_value"
  op: "Maximum"
  input: "fire6/clip_by_value/Minimum"
  input: "fire6/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire6/truediv_1"
  op: "RealDiv"
  input: "fire6/clip_by_value"
  input: "fire6/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire6/mul_1"
  op: "Mul"
  input: "fire6/truediv_1"
  input: "fire6/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire6/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire6/bn/batchnorm/add_1"
  input: "fire6/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/clip_by_value_1"
  op: "Maximum"
  input: "fire6/clip_by_value_1/Minimum"
  input: "fire6/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/sub"
  op: "Sub"
  input: "fire6/mul_1"
  input: "fire6/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/StopGradient"
  op: "StopGradient"
  input: "fire6/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/add"
  op: "Add"
  input: "fire6/clip_by_value_1"
  input: "fire6/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/Relu"
  op: "Relu"
  input: "fire6/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/after_relu"
      }
    }
  }
}
node {
  name: "fire6/after_relu"
  op: "HistogramSummary"
  input: "fire6/after_relu/tag"
  input: "fire6/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/pool/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/pool"
      }
    }
  }
}
node {
  name: "fire6/pool"
  op: "HistogramSummary"
  input: "fire6/pool/tag"
  input: "fire6/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal/mul"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Assign"
  op: "Assign"
  input: "fire7/conv3x3/kernels"
  input: "fire7/conv3x3/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/read"
  op: "Identity"
  input: "fire7/conv3x3/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/L2Loss"
  op: "L2Loss"
  input: "fire7/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "fire7/conv3x3/weight_loss"
  op: "Mul"
  input: "fire7/conv3x3/L2Loss"
  input: "fire7/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/conv3x3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Assign"
  op: "Assign"
  input: "fire7/conv3x3/biases"
  input: "fire7/conv3x3/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/conv3x3/biases/read"
  op: "Identity"
  input: "fire7/conv3x3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/convolution"
  op: "Conv2D"
  input: "fire6/Relu"
  input: "fire7/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/conv3x3/bias_add"
  op: "BiasAdd"
  input: "fire7/conv3x3/convolution"
  input: "fire7/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fire7/before_bn/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/before_bn"
      }
    }
  }
}
node {
  name: "fire7/before_bn"
  op: "HistogramSummary"
  input: "fire7/before_bn/tag"
  input: "fire7/conv3x3/bias_add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/beta/Assign"
  op: "Assign"
  input: "fire7/bn/beta"
  input: "fire7/bn/beta/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/beta/read"
  op: "Identity"
  input: "fire7/bn/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
}
node {
  name: "fire7/bn/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/gamma/Assign"
  op: "Assign"
  input: "fire7/bn/gamma"
  input: "fire7/bn/gamma/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/gamma/read"
  op: "Identity"
  input: "fire7/bn/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
}
node {
  name: "fire7/bn/bn_gamma/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/bn_gamma"
      }
    }
  }
}
node {
  name: "fire7/bn/bn_gamma"
  op: "HistogramSummary"
  input: "fire7/bn/bn_gamma/tag"
  input: "fire7/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/bn_beta/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/bn_beta"
      }
    }
  }
}
node {
  name: "fire7/bn/bn_beta"
  op: "HistogramSummary"
  input: "fire7/bn/bn_beta/tag"
  input: "fire7/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire7/bn/moments/mean"
  op: "Mean"
  input: "fire7/conv3x3/bias_add"
  input: "fire7/bn/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/moments/StopGradient"
  op: "StopGradient"
  input: "fire7/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fire7/conv3x3/bias_add"
  input: "fire7/bn/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fire7/bn/moments/variance"
  op: "Mean"
  input: "fire7/bn/moments/SquaredDifference"
  input: "fire7/bn/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/moments/Squeeze"
  op: "Squeeze"
  input: "fire7/bn/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire7/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "fire7/bn/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fire7/bn/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/moving_mean/Assign"
  op: "Assign"
  input: "fire7/bn/moving_mean"
  input: "fire7/bn/moving_mean/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/moving_mean/read"
  op: "Identity"
  input: "fire7/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/moving_variance/Assign"
  op: "Assign"
  input: "fire7/bn/moving_variance"
  input: "fire7/bn/moving_variance/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/moving_variance/read"
  op: "Identity"
  input: "fire7/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/biased/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  input: "fire7/bn/fire7/bn/moving_mean/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub"
  op: "Sub"
  input: "fire7/bn/fire7/bn/moving_mean/biased/read"
  input: "fire7/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/mul"
  op: "Mul"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub"
  input: "fire7/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/fire7/bn/fire7/bn/moving_mean"
  op: "AssignSub"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/fire7/bn/fire7/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/fire7/bn/fire7/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_1"
  op: "Sub"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_1/x"
  input: "fire7/bn/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/read_1"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/fire7/bn/fire7/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/Pow"
  op: "Pow"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_1"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/fire7/bn/fire7/bn/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_2"
  op: "Sub"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_2/x"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/read"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_3"
  op: "Sub"
  input: "fire7/bn/moving_mean/read"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "fire7/bn/moving_mean"
  input: "fire7/bn/AssignMovingAvg/fire7/bn/moving_mean/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/biased"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/biased/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/local_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  input: "fire7/bn/fire7/bn/moving_variance/local_step/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/fire7/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub"
  op: "Sub"
  input: "fire7/bn/fire7/bn/moving_variance/biased/read"
  input: "fire7/bn/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/mul"
  op: "Mul"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub"
  input: "fire7/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/fire7/bn/fire7/bn/moving_variance"
  op: "AssignSub"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/read"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/fire7/bn/fire7/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/fire7/bn/fire7/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_1"
  op: "Sub"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_1/x"
  input: "fire7/bn/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/read_1"
  op: "Identity"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/fire7/bn/fire7/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/Pow"
  op: "Pow"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_1"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/read_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/AssignAdd"
  input: "^fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/fire7/bn/fire7/bn/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_2"
  op: "Sub"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_2/x"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/read"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_3"
  op: "Sub"
  input: "fire7/bn/moving_variance/read"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "fire7/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "fire7/bn/moving_variance"
  input: "fire7/bn/AssignMovingAvg_1/fire7/bn/moving_variance/sub_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire7/bn/batchnorm/add/y"
  op: "Const"
  input: "^fire7/bn/AssignMovingAvg"
  input: "^fire7/bn/AssignMovingAvg_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fire7/bn/batchnorm/add"
  op: "Add"
  input: "fire7/bn/moments/Squeeze_1"
  input: "fire7/bn/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fire7/bn/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/mul"
  op: "Mul"
  input: "fire7/bn/batchnorm/Rsqrt"
  input: "fire7/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/mul_1"
  op: "Mul"
  input: "fire7/conv3x3/bias_add"
  input: "fire7/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/mul_2"
  op: "Mul"
  input: "fire7/bn/moments/Squeeze"
  input: "fire7/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/sub"
  op: "Sub"
  input: "fire7/bn/beta/read"
  input: "fire7/bn/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/batchnorm/add_1"
  op: "Add"
  input: "fire7/bn/batchnorm/mul_1"
  input: "fire7/bn/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/before_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/before_relu"
      }
    }
  }
}
node {
  name: "fire7/before_relu"
  op: "HistogramSummary"
  input: "fire7/before_relu/tag"
  input: "fire7/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/Rint/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/Rint"
  op: "Rint"
  input: "fire7/Rint/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/Rint_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire7/Rint_1"
  op: "Rint"
  input: "fire7/Rint_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire7/mul"
  op: "Mul"
  input: "fire7/mul/x"
  input: "fire7/bn/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire7/truediv"
  op: "RealDiv"
  input: "fire7/mul"
  input: "fire7/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/Rint_2"
  op: "Rint"
  input: "fire7/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/clip_by_value/Minimum"
  op: "Minimum"
  input: "fire7/Rint_2"
  input: "fire7/Rint_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/clip_by_value"
  op: "Maximum"
  input: "fire7/clip_by_value/Minimum"
  input: "fire7/Rint"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "fire7/truediv_1"
  op: "RealDiv"
  input: "fire7/clip_by_value"
  input: "fire7/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire7/mul_1"
  op: "Mul"
  input: "fire7/truediv_1"
  input: "fire7/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/clip_by_value_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fire7/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "fire7/bn/batchnorm/add_1"
  input: "fire7/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/clip_by_value_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/clip_by_value_1"
  op: "Maximum"
  input: "fire7/clip_by_value_1/Minimum"
  input: "fire7/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/sub"
  op: "Sub"
  input: "fire7/mul_1"
  input: "fire7/clip_by_value_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/StopGradient"
  op: "StopGradient"
  input: "fire7/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/add"
  op: "Add"
  input: "fire7/clip_by_value_1"
  input: "fire7/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/Relu"
  op: "Relu"
  input: "fire7/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/after_relu/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/after_relu"
      }
    }
  }
}
node {
  name: "fire7/after_relu"
  op: "HistogramSummary"
  input: "fire7/after_relu/tag"
  input: "fire7/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/pool/MaxPool"
  op: "MaxPool"
  input: "fire7/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "fire7/pool_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/pool_1"
      }
    }
  }
}
node {
  name: "fire7/pool_1"
  op: "HistogramSummary"
  input: "fire7/pool_1/tag"
  input: "fire7/pool/MaxPool"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv12/kernels/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv12/kernels/Initializer/truncated_normal/TruncatedNormal"
  input: "conv12/kernels/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
}
node {
  name: "conv12/kernels/Initializer/truncated_normal"
  op: "Add"
  input: "conv12/kernels/Initializer/truncated_normal/mul"
  input: "conv12/kernels/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
}
node {
  name: "conv12/kernels"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/kernels/Assign"
  op: "Assign"
  input: "conv12/kernels"
  input: "conv12/kernels/Initializer/truncated_normal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/kernels/read"
  op: "Identity"
  input: "conv12/kernels"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
}
node {
  name: "conv12/L2Loss"
  op: "L2Loss"
  input: "conv12/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/weight_loss/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv12/weight_loss"
  op: "Mul"
  input: "conv12/L2Loss"
  input: "conv12/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/biases/Assign"
  op: "Assign"
  input: "conv12/biases"
  input: "conv12/biases/Initializer/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/biases/read"
  op: "Identity"
  input: "conv12/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
}
node {
  name: "conv12/convolution"
  op: "Conv2D"
  input: "fire7/pool/MaxPool"
  input: "conv12/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bias_add"
  op: "BiasAdd"
  input: "conv12/convolution"
  input: "conv12/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "interpret_output/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice"
  op: "StridedSlice"
  input: "conv12/bias_add"
  input: "interpret_output/strided_slice/stack"
  input: "interpret_output/strided_slice/stack_1"
  input: "interpret_output/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "interpret_output/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/Reshape"
  op: "Reshape"
  input: "interpret_output/strided_slice"
  input: "interpret_output/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "interpret_output/pred_confidence_score"
  op: "Sigmoid"
  input: "interpret_output/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "interpret_output/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_1"
  op: "StridedSlice"
  input: "conv12/bias_add"
  input: "interpret_output/strided_slice_1/stack"
  input: "interpret_output/strided_slice_1/stack_1"
  input: "interpret_output/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "interpret_output/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/Reshape_1"
  op: "Reshape"
  input: "interpret_output/strided_slice_1"
  input: "interpret_output/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "interpret_output/Softmax"
  op: "Softmax"
  input: "interpret_output/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "interpret_output/pred_class_probs/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/pred_class_probs"
  op: "Reshape"
  input: "interpret_output/Softmax"
  input: "interpret_output/pred_class_probs/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "interpret_output/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/strided_slice_2"
  op: "StridedSlice"
  input: "conv12/bias_add"
  input: "interpret_output/strided_slice_2/stack"
  input: "interpret_output/strided_slice_2/stack_1"
  input: "interpret_output/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "interpret_output/bbox_delta/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/bbox_delta"
  op: "Reshape"
  input: "interpret_output/strided_slice_2"
  input: "interpret_output/bbox_delta/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "interpret_output/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "interpret_output/num_objects"
  op: "Sum"
  input: "batch:1"
  input: "interpret_output/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/unstack"
  op: "Unpack"
  input: "interpret_output/bbox_delta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "bbox/stretching/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A"
      }
    }
  }
}
node {
  name: "bbox/stretching/mul"
  op: "Mul"
  input: "bbox/stretching/unstack"
  input: "bbox/stretching/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/add/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A\357\356\356A333B333B333B333B333B333B333B\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nBUU\225BUU\225BUU\225BUU\225BUU\225BUU\225BUU\225B33\263B33\263B33\263B33\263B33\263B33\263B33\263B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\021\021\321B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356B\357\356\356Bff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CUU\025CDD$CDD$CDD$CDD$CDD$CDD$CDD$C333C333C333C333C333C333C333C\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\"\"BC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC\021\021QC"
      }
    }
  }
}
node {
  name: "bbox/stretching/add"
  op: "Add"
  input: "bbox/stretching/add/x"
  input: "bbox/stretching/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/bbox_cx"
  op: "Identity"
  input: "bbox/stretching/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A"
      }
    }
  }
}
node {
  name: "bbox/stretching/mul_1"
  op: "Mul"
  input: "bbox/stretching/unstack:1"
  input: "bbox/stretching/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/add_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nA\357\356nnB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nB\357\356nff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff\006Cff
      }
    }
  }
}
node {
  name: "bbox/stretching/add_1"
  op: "Add"
  input: "bbox/stretching/add_1/x"
  input: "bbox/stretching/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/bbox_cy"
  op: "Identity"
  input: "bbox/stretching/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/mul_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A"
      }
    }
  }
}
node {
  name: "bbox/stretching/mul_2"
  op: "Mul"
  input: "bbox/stretching/mul_2/x"
  input: "bbox/stretching/unstack:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/bbox_width"
  op: "Identity"
  input: "bbox/stretching/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/mul_3/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1372
          }
        }
        tensor_content: "\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A\000\0008C\000\000\nC\000\000\270B\000\000\212B\000\0008B\000\000\010B\000\000\270A"
      }
    }
  }
}
node {
  name: "bbox/stretching/mul_3"
  op: "Mul"
  input: "bbox/stretching/mul_3/x"
  input: "bbox/stretching/unstack:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/bbox_height"
  op: "Identity"
  input: "bbox/stretching/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary/activation_summary/delta_x"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/tag"
  input: "bbox/stretching/unstack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/unstack"
  input: "bbox/stretching/activation_summary/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary/activation_summary/delta_x/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/sparsity/tags"
  input: "bbox/stretching/activation_summary/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Mean"
  op: "Mean"
  input: "bbox/stretching/unstack"
  input: "bbox/stretching/activation_summary/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary/activation_summary/delta_x/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/average/tags"
  input: "bbox/stretching/activation_summary/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Max"
  op: "Max"
  input: "bbox/stretching/unstack"
  input: "bbox/stretching/activation_summary/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary/activation_summary/delta_x/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/max/tags"
  input: "bbox/stretching/activation_summary/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/Min"
  op: "Min"
  input: "bbox/stretching/unstack"
  input: "bbox/stretching/activation_summary/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary/activation_summary/delta_x/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary/activation_summary/delta_x/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/min/tags"
  input: "bbox/stretching/activation_summary/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_1/activation_summary/delta_y"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/tag"
  input: "bbox/stretching/unstack:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/unstack:1"
  input: "bbox/stretching/activation_summary_1/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_1/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_1/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_1/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_1/activation_summary/delta_y/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/sparsity/tags"
  input: "bbox/stretching/activation_summary_1/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Mean"
  op: "Mean"
  input: "bbox/stretching/unstack:1"
  input: "bbox/stretching/activation_summary_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_1/activation_summary/delta_y/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/average/tags"
  input: "bbox/stretching/activation_summary_1/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Max"
  op: "Max"
  input: "bbox/stretching/unstack:1"
  input: "bbox/stretching/activation_summary_1/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_1/activation_summary/delta_y/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/max/tags"
  input: "bbox/stretching/activation_summary_1/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/Min"
  op: "Min"
  input: "bbox/stretching/unstack:1"
  input: "bbox/stretching/activation_summary_1/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_1/activation_summary/delta_y/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_1/activation_summary/delta_y/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/min/tags"
  input: "bbox/stretching/activation_summary_1/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_2/activation_summary/delta_w"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/tag"
  input: "bbox/stretching/unstack:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/unstack:2"
  input: "bbox/stretching/activation_summary_2/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_2/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_2/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_2/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_2/activation_summary/delta_w/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/sparsity/tags"
  input: "bbox/stretching/activation_summary_2/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Mean"
  op: "Mean"
  input: "bbox/stretching/unstack:2"
  input: "bbox/stretching/activation_summary_2/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_2/activation_summary/delta_w/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/average/tags"
  input: "bbox/stretching/activation_summary_2/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Max"
  op: "Max"
  input: "bbox/stretching/unstack:2"
  input: "bbox/stretching/activation_summary_2/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_2/activation_summary/delta_w/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/max/tags"
  input: "bbox/stretching/activation_summary_2/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/Min"
  op: "Min"
  input: "bbox/stretching/unstack:2"
  input: "bbox/stretching/activation_summary_2/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_2/activation_summary/delta_w/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_2/activation_summary/delta_w/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/min/tags"
  input: "bbox/stretching/activation_summary_2/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_3/activation_summary/delta_h"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/tag"
  input: "bbox/stretching/unstack:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/unstack:3"
  input: "bbox/stretching/activation_summary_3/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_3/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_3/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_3/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_3/activation_summary/delta_h/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/sparsity/tags"
  input: "bbox/stretching/activation_summary_3/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Mean"
  op: "Mean"
  input: "bbox/stretching/unstack:3"
  input: "bbox/stretching/activation_summary_3/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_3/activation_summary/delta_h/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/average/tags"
  input: "bbox/stretching/activation_summary_3/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Max"
  op: "Max"
  input: "bbox/stretching/unstack:3"
  input: "bbox/stretching/activation_summary_3/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_3/activation_summary/delta_h/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/max/tags"
  input: "bbox/stretching/activation_summary_3/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/Min"
  op: "Min"
  input: "bbox/stretching/unstack:3"
  input: "bbox/stretching/activation_summary_3/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_3/activation_summary/delta_h/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_3/activation_summary/delta_h/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/min/tags"
  input: "bbox/stretching/activation_summary_3/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/tag"
  input: "bbox/stretching/bbox_cx"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/stretching/activation_summary_4/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_4/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_4/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_4/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/sparsity/tags"
  input: "bbox/stretching/activation_summary_4/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Mean"
  op: "Mean"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/stretching/activation_summary_4/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/average/tags"
  input: "bbox/stretching/activation_summary_4/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Max"
  op: "Max"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/stretching/activation_summary_4/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/max/tags"
  input: "bbox/stretching/activation_summary_4/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/Min"
  op: "Min"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/stretching/activation_summary_4/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/min/tags"
  input: "bbox/stretching/activation_summary_4/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/tag"
  input: "bbox/stretching/bbox_cy"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/stretching/activation_summary_5/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_5/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_5/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_5/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/sparsity/tags"
  input: "bbox/stretching/activation_summary_5/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Mean"
  op: "Mean"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/stretching/activation_summary_5/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/average/tags"
  input: "bbox/stretching/activation_summary_5/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Max"
  op: "Max"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/stretching/activation_summary_5/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/max/tags"
  input: "bbox/stretching/activation_summary_5/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/Min"
  op: "Min"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/stretching/activation_summary_5/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/min/tags"
  input: "bbox/stretching/activation_summary_5/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_6/activation_summary/bbox_width"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/tag"
  input: "bbox/stretching/bbox_width"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/bbox_width"
  input: "bbox/stretching/activation_summary_6/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_6/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_6/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_6/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/sparsity/tags"
  input: "bbox/stretching/activation_summary_6/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Mean"
  op: "Mean"
  input: "bbox/stretching/bbox_width"
  input: "bbox/stretching/activation_summary_6/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/average/tags"
  input: "bbox/stretching/activation_summary_6/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Max"
  op: "Max"
  input: "bbox/stretching/bbox_width"
  input: "bbox/stretching/activation_summary_6/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/max/tags"
  input: "bbox/stretching/activation_summary_6/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/Min"
  op: "Min"
  input: "bbox/stretching/bbox_width"
  input: "bbox/stretching/activation_summary_6/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/min/tags"
  input: "bbox/stretching/activation_summary_6/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_7/activation_summary/bbox_height"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height"
  op: "HistogramSummary"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/tag"
  input: "bbox/stretching/bbox_height"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/stretching/bbox_height"
  input: "bbox/stretching/activation_summary_7/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/stretching/activation_summary_7/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/stretching/activation_summary_7/zero_fraction/Cast"
  input: "bbox/stretching/activation_summary_7/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/sparsity"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/sparsity"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/sparsity/tags"
  input: "bbox/stretching/activation_summary_7/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Mean"
  op: "Mean"
  input: "bbox/stretching/bbox_height"
  input: "bbox/stretching/activation_summary_7/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/average"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/average"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/average/tags"
  input: "bbox/stretching/activation_summary_7/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Max"
  op: "Max"
  input: "bbox/stretching/bbox_height"
  input: "bbox/stretching/activation_summary_7/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/max"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/max"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/max/tags"
  input: "bbox/stretching/activation_summary_7/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/Min"
  op: "Min"
  input: "bbox/stretching/bbox_height"
  input: "bbox/stretching/activation_summary_7/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/min"
      }
    }
  }
}
node {
  name: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/min"
  op: "ScalarSummary"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/min/tags"
  input: "bbox/stretching/activation_summary_7/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv"
  op: "RealDiv"
  input: "bbox/stretching/bbox_width"
  input: "bbox/trimming/bbox_transform/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/sub"
  op: "Sub"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/trimming/bbox_transform/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_1"
  op: "RealDiv"
  input: "bbox/stretching/bbox_height"
  input: "bbox/trimming/bbox_transform/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/sub_1"
  op: "Sub"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/trimming/bbox_transform/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_2/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_2"
  op: "RealDiv"
  input: "bbox/stretching/bbox_width"
  input: "bbox/trimming/bbox_transform/truediv_2/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/add"
  op: "Add"
  input: "bbox/stretching/bbox_cx"
  input: "bbox/trimming/bbox_transform/truediv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_3/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/truediv_3"
  op: "RealDiv"
  input: "bbox/stretching/bbox_height"
  input: "bbox/trimming/bbox_transform/truediv_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform/add_1"
  op: "Add"
  input: "bbox/stretching/bbox_cy"
  input: "bbox/trimming/bbox_transform/truediv_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/Maximum/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/Maximum"
  op: "Maximum"
  input: "bbox/trimming/Maximum/x"
  input: "bbox/trimming/bbox_transform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_xmin/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 223.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_xmin"
  op: "Minimum"
  input: "bbox/trimming/Maximum"
  input: "bbox/trimming/bbox_xmin/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary/activation_summary/box_xmin"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin"
  op: "HistogramSummary"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/tag"
  input: "bbox/trimming/bbox_xmin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/trimming/bbox_xmin"
  input: "bbox/trimming/activation_summary/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/trimming/activation_summary/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/trimming/activation_summary/zero_fraction/Cast"
  input: "bbox/trimming/activation_summary/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary/activation_summary/box_xmin/sparsity"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/sparsity"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/sparsity/tags"
  input: "bbox/trimming/activation_summary/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Mean"
  op: "Mean"
  input: "bbox/trimming/bbox_xmin"
  input: "bbox/trimming/activation_summary/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary/activation_summary/box_xmin/average"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/average"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/average/tags"
  input: "bbox/trimming/activation_summary/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Max"
  op: "Max"
  input: "bbox/trimming/bbox_xmin"
  input: "bbox/trimming/activation_summary/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary/activation_summary/box_xmin/max"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/max"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/max/tags"
  input: "bbox/trimming/activation_summary/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/Min"
  op: "Min"
  input: "bbox/trimming/bbox_xmin"
  input: "bbox/trimming/activation_summary/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary/activation_summary/box_xmin/min"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary/activation_summary/box_xmin/min"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/min/tags"
  input: "bbox/trimming/activation_summary/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/Maximum_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/Maximum_1"
  op: "Maximum"
  input: "bbox/trimming/Maximum_1/x"
  input: "bbox/trimming/bbox_transform/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_ymin/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 223.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_ymin"
  op: "Minimum"
  input: "bbox/trimming/Maximum_1"
  input: "bbox/trimming/bbox_ymin/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_1/activation_summary/box_ymin"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin"
  op: "HistogramSummary"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/tag"
  input: "bbox/trimming/bbox_ymin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/trimming/bbox_ymin"
  input: "bbox/trimming/activation_summary_1/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/trimming/activation_summary_1/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/trimming/activation_summary_1/zero_fraction/Cast"
  input: "bbox/trimming/activation_summary_1/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/sparsity"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/sparsity"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/sparsity/tags"
  input: "bbox/trimming/activation_summary_1/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Mean"
  op: "Mean"
  input: "bbox/trimming/bbox_ymin"
  input: "bbox/trimming/activation_summary_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/average"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/average"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/average/tags"
  input: "bbox/trimming/activation_summary_1/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Max"
  op: "Max"
  input: "bbox/trimming/bbox_ymin"
  input: "bbox/trimming/activation_summary_1/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/max"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/max"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/max/tags"
  input: "bbox/trimming/activation_summary_1/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/Min"
  op: "Min"
  input: "bbox/trimming/bbox_ymin"
  input: "bbox/trimming/activation_summary_1/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/min"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/min"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/min/tags"
  input: "bbox/trimming/activation_summary_1/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/Minimum/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 223.0
      }
    }
  }
}
node {
  name: "bbox/trimming/Minimum"
  op: "Minimum"
  input: "bbox/trimming/Minimum/x"
  input: "bbox/trimming/bbox_transform/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_xmax/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_xmax"
  op: "Maximum"
  input: "bbox/trimming/Minimum"
  input: "bbox/trimming/bbox_xmax/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_2/activation_summary/box_xmax"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax"
  op: "HistogramSummary"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/tag"
  input: "bbox/trimming/bbox_xmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/trimming/bbox_xmax"
  input: "bbox/trimming/activation_summary_2/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/trimming/activation_summary_2/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/trimming/activation_summary_2/zero_fraction/Cast"
  input: "bbox/trimming/activation_summary_2/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/sparsity"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/sparsity"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/sparsity/tags"
  input: "bbox/trimming/activation_summary_2/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Mean"
  op: "Mean"
  input: "bbox/trimming/bbox_xmax"
  input: "bbox/trimming/activation_summary_2/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/average"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/average"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/average/tags"
  input: "bbox/trimming/activation_summary_2/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Max"
  op: "Max"
  input: "bbox/trimming/bbox_xmax"
  input: "bbox/trimming/activation_summary_2/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/max"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/max"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/max/tags"
  input: "bbox/trimming/activation_summary_2/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/Min"
  op: "Min"
  input: "bbox/trimming/bbox_xmax"
  input: "bbox/trimming/activation_summary_2/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/min"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/min"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/min/tags"
  input: "bbox/trimming/activation_summary_2/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/Minimum_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 223.0
      }
    }
  }
}
node {
  name: "bbox/trimming/Minimum_1"
  op: "Minimum"
  input: "bbox/trimming/Minimum_1/x"
  input: "bbox/trimming/bbox_transform/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_ymax/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_ymax"
  op: "Maximum"
  input: "bbox/trimming/Minimum_1"
  input: "bbox/trimming/bbox_ymax/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_3/activation_summary/box_ymax"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax"
  op: "HistogramSummary"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/tag"
  input: "bbox/trimming/bbox_ymax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/zero_fraction/Equal"
  op: "Equal"
  input: "bbox/trimming/bbox_ymax"
  input: "bbox/trimming/activation_summary_3/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/zero_fraction/Cast"
  op: "Cast"
  input: "bbox/trimming/activation_summary_3/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/zero_fraction/Mean"
  op: "Mean"
  input: "bbox/trimming/activation_summary_3/zero_fraction/Cast"
  input: "bbox/trimming/activation_summary_3/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/sparsity"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/sparsity"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/sparsity/tags"
  input: "bbox/trimming/activation_summary_3/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Mean"
  op: "Mean"
  input: "bbox/trimming/bbox_ymax"
  input: "bbox/trimming/activation_summary_3/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/average"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/average"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/average/tags"
  input: "bbox/trimming/activation_summary_3/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Max"
  op: "Max"
  input: "bbox/trimming/bbox_ymax"
  input: "bbox/trimming/activation_summary_3/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/max"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/max"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/max/tags"
  input: "bbox/trimming/activation_summary_3/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/Min"
  op: "Min"
  input: "bbox/trimming/bbox_ymax"
  input: "bbox/trimming/activation_summary_3/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/min"
      }
    }
  }
}
node {
  name: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/min"
  op: "ScalarSummary"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/min/tags"
  input: "bbox/trimming/activation_summary_3/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/sub"
  op: "Sub"
  input: "bbox/trimming/bbox_xmax"
  input: "bbox/trimming/bbox_xmin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add"
  op: "Add"
  input: "bbox/trimming/bbox_transform_inv/sub"
  input: "bbox/trimming/bbox_transform_inv/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/sub_1"
  op: "Sub"
  input: "bbox/trimming/bbox_ymax"
  input: "bbox/trimming/bbox_ymin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add_1"
  op: "Add"
  input: "bbox/trimming/bbox_transform_inv/sub_1"
  input: "bbox/trimming/bbox_transform_inv/add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/mul"
  op: "Mul"
  input: "bbox/trimming/bbox_transform_inv/mul/x"
  input: "bbox/trimming/bbox_transform_inv/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add_2"
  op: "Add"
  input: "bbox/trimming/bbox_xmin"
  input: "bbox/trimming/bbox_transform_inv/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/mul_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/mul_1"
  op: "Mul"
  input: "bbox/trimming/bbox_transform_inv/mul_1/x"
  input: "bbox/trimming/bbox_transform_inv/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/bbox_transform_inv/add_3"
  op: "Add"
  input: "bbox/trimming/bbox_ymin"
  input: "bbox/trimming/bbox_transform_inv/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bbox/trimming/stack"
  op: "Pack"
  input: "bbox/trimming/bbox_transform_inv/add_2"
  input: "bbox/trimming/bbox_transform_inv/add_3"
  input: "bbox/trimming/bbox_transform_inv/add"
  input: "bbox/trimming/bbox_transform_inv/add_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bbox/trimming/bbox/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bbox/trimming/bbox"
  op: "Transpose"
  input: "bbox/trimming/stack"
  input: "bbox/trimming/bbox/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "IOU_1/unstack"
  op: "Unpack"
  input: "bbox/trimming/bbox"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv"
  op: "RealDiv"
  input: "IOU_1/unstack:2"
  input: "IOU_1/bbox_transform/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/sub"
  op: "Sub"
  input: "IOU_1/unstack"
  input: "IOU_1/bbox_transform/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_1"
  op: "RealDiv"
  input: "IOU_1/unstack:3"
  input: "IOU_1/bbox_transform/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/sub_1"
  op: "Sub"
  input: "IOU_1/unstack:1"
  input: "IOU_1/bbox_transform/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_2/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_2"
  op: "RealDiv"
  input: "IOU_1/unstack:2"
  input: "IOU_1/bbox_transform/truediv_2/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/add"
  op: "Add"
  input: "IOU_1/unstack"
  input: "IOU_1/bbox_transform/truediv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_3/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform/truediv_3"
  op: "RealDiv"
  input: "IOU_1/unstack:3"
  input: "IOU_1/bbox_transform/truediv_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform/add_1"
  op: "Add"
  input: "IOU_1/unstack:1"
  input: "IOU_1/bbox_transform/truediv_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/unstack_1"
  op: "Unpack"
  input: "batch:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv"
  op: "RealDiv"
  input: "IOU_1/unstack_1:2"
  input: "IOU_1/bbox_transform_1/truediv/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/sub"
  op: "Sub"
  input: "IOU_1/unstack_1"
  input: "IOU_1/bbox_transform_1/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_1"
  op: "RealDiv"
  input: "IOU_1/unstack_1:3"
  input: "IOU_1/bbox_transform_1/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/sub_1"
  op: "Sub"
  input: "IOU_1/unstack_1:1"
  input: "IOU_1/bbox_transform_1/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_2/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_2"
  op: "RealDiv"
  input: "IOU_1/unstack_1:2"
  input: "IOU_1/bbox_transform_1/truediv_2/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/add"
  op: "Add"
  input: "IOU_1/unstack_1"
  input: "IOU_1/bbox_transform_1/truediv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_3/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/truediv_3"
  op: "RealDiv"
  input: "IOU_1/unstack_1:3"
  input: "IOU_1/bbox_transform_1/truediv_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/bbox_transform_1/add_1"
  op: "Add"
  input: "IOU_1/unstack_1:1"
  input: "IOU_1/bbox_transform_1/truediv_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/xmin"
  op: "Maximum"
  input: "IOU_1/bbox_transform/sub"
  input: "IOU_1/bbox_transform_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/ymin"
  op: "Maximum"
  input: "IOU_1/bbox_transform/sub_1"
  input: "IOU_1/bbox_transform_1/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/xmax"
  op: "Minimum"
  input: "IOU_1/bbox_transform/add"
  input: "IOU_1/bbox_transform_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/ymax"
  op: "Minimum"
  input: "IOU_1/bbox_transform/add_1"
  input: "IOU_1/bbox_transform_1/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/sub"
  op: "Sub"
  input: "IOU_1/intersection/xmax"
  input: "IOU_1/intersection/xmin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/inter_w/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "IOU_1/intersection/inter_w"
  op: "Maximum"
  input: "IOU_1/intersection/inter_w/x"
  input: "IOU_1/intersection/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/sub_1"
  op: "Sub"
  input: "IOU_1/intersection/ymax"
  input: "IOU_1/intersection/ymin"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/inter_h/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "IOU_1/intersection/inter_h"
  op: "Maximum"
  input: "IOU_1/intersection/inter_h/x"
  input: "IOU_1/intersection/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/intersection/intersection"
  op: "Mul"
  input: "IOU_1/intersection/inter_w"
  input: "IOU_1/intersection/inter_h"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/w1"
  op: "Sub"
  input: "IOU_1/bbox_transform/add"
  input: "IOU_1/bbox_transform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/h1"
  op: "Sub"
  input: "IOU_1/bbox_transform/add_1"
  input: "IOU_1/bbox_transform/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/w2"
  op: "Sub"
  input: "IOU_1/bbox_transform_1/add"
  input: "IOU_1/bbox_transform_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/h2"
  op: "Sub"
  input: "IOU_1/bbox_transform_1/add_1"
  input: "IOU_1/bbox_transform_1/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/mul"
  op: "Mul"
  input: "IOU_1/union/w1"
  input: "IOU_1/union/h1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/mul_1"
  op: "Mul"
  input: "IOU_1/union/w2"
  input: "IOU_1/union/h2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/add"
  op: "Add"
  input: "IOU_1/union/mul"
  input: "IOU_1/union/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/union/sub"
  op: "Sub"
  input: "IOU_1/union/add"
  input: "IOU_1/intersection/intersection"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "IOU_1/add"
  op: "Add"
  input: "IOU_1/union/sub"
  input: "IOU_1/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/truediv"
  op: "RealDiv"
  input: "IOU_1/intersection/intersection"
  input: "IOU_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000"
      }
    }
  }
}
node {
  name: "IOU_1/Reshape"
  op: "Reshape"
  input: "batch:1"
  input: "IOU_1/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "IOU_1/mul"
  op: "Mul"
  input: "IOU_1/truediv"
  input: "IOU_1/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/Assign"
  op: "Assign"
  input: "iou"
  input: "IOU_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iou"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IOU_1/activation_summary/activation_summary/conf_score"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score"
  op: "HistogramSummary"
  input: "IOU_1/activation_summary/activation_summary/conf_score/tag"
  input: "IOU_1/Assign"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/activation_summary/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/zero_fraction/Equal"
  op: "Equal"
  input: "IOU_1/Assign"
  input: "IOU_1/activation_summary/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/activation_summary/zero_fraction/Cast"
  op: "Cast"
  input: "IOU_1/activation_summary/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "IOU_1/activation_summary/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/zero_fraction/Mean"
  op: "Mean"
  input: "IOU_1/activation_summary/zero_fraction/Cast"
  input: "IOU_1/activation_summary/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IOU_1/activation_summary/activation_summary/conf_score/sparsity"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/sparsity"
  op: "ScalarSummary"
  input: "IOU_1/activation_summary/activation_summary/conf_score/sparsity/tags"
  input: "IOU_1/activation_summary/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/activation_summary/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/Mean"
  op: "Mean"
  input: "IOU_1/Assign"
  input: "IOU_1/activation_summary/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IOU_1/activation_summary/activation_summary/conf_score/average"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/average"
  op: "ScalarSummary"
  input: "IOU_1/activation_summary/activation_summary/conf_score/average/tags"
  input: "IOU_1/activation_summary/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/activation_summary/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/Max"
  op: "Max"
  input: "IOU_1/Assign"
  input: "IOU_1/activation_summary/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IOU_1/activation_summary/activation_summary/conf_score/max"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/max"
  op: "ScalarSummary"
  input: "IOU_1/activation_summary/activation_summary/conf_score/max/tags"
  input: "IOU_1/activation_summary/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IOU_1/activation_summary/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/Min"
  op: "Min"
  input: "IOU_1/Assign"
  input: "IOU_1/activation_summary/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IOU_1/activation_summary/activation_summary/conf_score/min"
      }
    }
  }
}
node {
  name: "IOU_1/activation_summary/activation_summary/conf_score/min"
  op: "ScalarSummary"
  input: "IOU_1/activation_summary/activation_summary/conf_score/min/tags"
  input: "IOU_1/activation_summary/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary/activation_summary/class_probs"
      }
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs"
  op: "HistogramSummary"
  input: "probability/activation_summary/activation_summary/class_probs/tag"
  input: "interpret_output/pred_class_probs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "probability/activation_summary/zero_fraction/Equal"
  op: "Equal"
  input: "interpret_output/pred_class_probs"
  input: "probability/activation_summary/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/zero_fraction/Cast"
  op: "Cast"
  input: "probability/activation_summary/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary/zero_fraction/Mean"
  op: "Mean"
  input: "probability/activation_summary/zero_fraction/Cast"
  input: "probability/activation_summary/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary/activation_summary/class_probs/sparsity"
      }
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/sparsity"
  op: "ScalarSummary"
  input: "probability/activation_summary/activation_summary/class_probs/sparsity/tags"
  input: "probability/activation_summary/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary/Mean"
  op: "Mean"
  input: "interpret_output/pred_class_probs"
  input: "probability/activation_summary/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary/activation_summary/class_probs/average"
      }
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/average"
  op: "ScalarSummary"
  input: "probability/activation_summary/activation_summary/class_probs/average/tags"
  input: "probability/activation_summary/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary/Max"
  op: "Max"
  input: "interpret_output/pred_class_probs"
  input: "probability/activation_summary/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary/activation_summary/class_probs/max"
      }
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/max"
  op: "ScalarSummary"
  input: "probability/activation_summary/activation_summary/class_probs/max/tags"
  input: "probability/activation_summary/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary/Min"
  op: "Min"
  input: "interpret_output/pred_class_probs"
  input: "probability/activation_summary/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary/activation_summary/class_probs/min"
      }
    }
  }
}
node {
  name: "probability/activation_summary/activation_summary/class_probs/min"
  op: "ScalarSummary"
  input: "probability/activation_summary/activation_summary/class_probs/min/tags"
  input: "probability/activation_summary/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "probability/Reshape"
  op: "Reshape"
  input: "interpret_output/pred_confidence_score"
  input: "probability/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "probability/final_class_prob"
  op: "Mul"
  input: "interpret_output/pred_class_probs"
  input: "probability/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary_1/activation_summary/final_class_prob"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob"
  op: "HistogramSummary"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/tag"
  input: "probability/final_class_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/zero_fraction/zero"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/zero_fraction/Equal"
  op: "Equal"
  input: "probability/final_class_prob"
  input: "probability/activation_summary_1/zero_fraction/zero"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/zero_fraction/Cast"
  op: "Cast"
  input: "probability/activation_summary_1/zero_fraction/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary_1/zero_fraction/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/zero_fraction/Mean"
  op: "Mean"
  input: "probability/activation_summary_1/zero_fraction/Cast"
  input: "probability/activation_summary_1/zero_fraction/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/sparsity/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary_1/activation_summary/final_class_prob/sparsity"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/sparsity"
  op: "ScalarSummary"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/sparsity/tags"
  input: "probability/activation_summary_1/zero_fraction/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/Mean"
  op: "Mean"
  input: "probability/final_class_prob"
  input: "probability/activation_summary_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/average/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary_1/activation_summary/final_class_prob/average"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/average"
  op: "ScalarSummary"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/average/tags"
  input: "probability/activation_summary_1/Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/Max"
  op: "Max"
  input: "probability/final_class_prob"
  input: "probability/activation_summary_1/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/max/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary_1/activation_summary/final_class_prob/max"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/max"
  op: "ScalarSummary"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/max/tags"
  input: "probability/activation_summary_1/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/activation_summary_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/Min"
  op: "Min"
  input: "probability/final_class_prob"
  input: "probability/activation_summary_1/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/min/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "probability/activation_summary_1/activation_summary/final_class_prob/min"
      }
    }
  }
}
node {
  name: "probability/activation_summary_1/activation_summary/final_class_prob/min"
  op: "ScalarSummary"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/min/tags"
  input: "probability/activation_summary_1/Min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "probability/score/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "probability/score"
  op: "Max"
  input: "probability/final_class_prob"
  input: "probability/score/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probability/class_idx/dimension"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "probability/class_idx"
  op: "ArgMax"
  input: "probability/final_class_prob"
  input: "probability/class_idx/dimension"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "class_regression/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "class_regression/add"
  op: "Add"
  input: "interpret_output/pred_class_probs"
  input: "class_regression/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/Log"
  op: "Log"
  input: "class_regression/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/Neg"
  op: "Neg"
  input: "class_regression/Log"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/mul"
  op: "Mul"
  input: "batch:4"
  input: "class_regression/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "class_regression/sub"
  op: "Sub"
  input: "class_regression/sub/x"
  input: "batch:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/sub_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "class_regression/sub_1"
  op: "Sub"
  input: "class_regression/sub_1/x"
  input: "interpret_output/pred_class_probs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/add_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "class_regression/add_1"
  op: "Add"
  input: "class_regression/sub_1"
  input: "class_regression/add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/Log_1"
  op: "Log"
  input: "class_regression/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/Neg_1"
  op: "Neg"
  input: "class_regression/Log_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/mul_1"
  op: "Mul"
  input: "class_regression/sub"
  input: "class_regression/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/add_2"
  op: "Add"
  input: "class_regression/mul"
  input: "class_regression/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/mul_2"
  op: "Mul"
  input: "class_regression/add_2"
  input: "batch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/mul_3/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "class_regression/mul_3"
  op: "Mul"
  input: "class_regression/mul_2"
  input: "class_regression/mul_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "class_regression/Sum"
  op: "Sum"
  input: "class_regression/mul_3"
  input: "class_regression/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "class_regression/class_loss"
  op: "RealDiv"
  input: "class_regression/Sum"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000"
      }
    }
  }
}
node {
  name: "confidence_score_regression/Reshape"
  op: "Reshape"
  input: "batch:1"
  input: "confidence_score_regression/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confidence_score_regression/sub"
  op: "Sub"
  input: "IOU_1/Assign"
  input: "interpret_output/pred_confidence_score"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/Square"
  op: "Square"
  input: "confidence_score_regression/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 75.0
      }
    }
  }
}
node {
  name: "confidence_score_regression/mul"
  op: "Mul"
  input: "confidence_score_regression/Reshape"
  input: "confidence_score_regression/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/truediv"
  op: "RealDiv"
  input: "confidence_score_regression/mul"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/sub_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "confidence_score_regression/sub_1"
  op: "Sub"
  input: "confidence_score_regression/sub_1/x"
  input: "confidence_score_regression/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "confidence_score_regression/mul_1"
  op: "Mul"
  input: "confidence_score_regression/sub_1"
  input: "confidence_score_regression/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/sub_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1372.0
      }
    }
  }
}
node {
  name: "confidence_score_regression/sub_2"
  op: "Sub"
  input: "confidence_score_regression/sub_2/x"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/truediv_1"
  op: "RealDiv"
  input: "confidence_score_regression/mul_1"
  input: "confidence_score_regression/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/add"
  op: "Add"
  input: "confidence_score_regression/truediv"
  input: "confidence_score_regression/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/mul_2"
  op: "Mul"
  input: "confidence_score_regression/Square"
  input: "confidence_score_regression/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/Sum/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confidence_score_regression/Sum"
  op: "Sum"
  input: "confidence_score_regression/mul_2"
  input: "confidence_score_regression/Sum/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confidence_score_regression/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confidence_score_regression/confidence_loss"
  op: "Mean"
  input: "confidence_score_regression/Sum"
  input: "confidence_score_regression/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confidence_score_regression/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "confidence_score_regression/Sum_1"
  op: "Sum"
  input: "IOU_1/Assign"
  input: "confidence_score_regression/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confidence_score_regression/truediv_2"
  op: "RealDiv"
  input: "confidence_score_regression/Sum_1"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/mean_iou/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "confidence_score_regression/mean_iou"
      }
    }
  }
}
node {
  name: "confidence_score_regression/mean_iou"
  op: "ScalarSummary"
  input: "confidence_score_regression/mean_iou/tags"
  input: "confidence_score_regression/truediv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/sub"
  op: "Sub"
  input: "interpret_output/bbox_delta"
  input: "batch:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/mul"
  op: "Mul"
  input: "batch:1"
  input: "bounding_box_regression/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/Square"
  op: "Square"
  input: "bounding_box_regression/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/mul_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "bounding_box_regression/mul_1"
  op: "Mul"
  input: "bounding_box_regression/mul_1/x"
  input: "bounding_box_regression/Square"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bounding_box_regression/Sum"
  op: "Sum"
  input: "bounding_box_regression/mul_1"
  input: "bounding_box_regression/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bounding_box_regression/bbox_loss"
  op: "RealDiv"
  input: "bounding_box_regression/Sum"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_loss"
  op: "AddN"
  input: "fire1/conv3x3/weight_loss"
  input: "fire2/conv3x3/weight_loss"
  input: "fire3/conv3x3/weight_loss"
  input: "fire4/conv3x3/weight_loss"
  input: "fire5/conv3x3/weight_loss"
  input: "fire6/conv3x3/weight_loss"
  input: "fire7/conv3x3/weight_loss"
  input: "conv12/weight_loss"
  input: "class_regression/class_loss"
  input: "confidence_score_regression/confidence_loss"
  input: "bounding_box_regression/bbox_loss"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "ExponentialDecay/learning_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "ExponentialDecay/Cast/x"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "global_step/read"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/learning_rate"
  input: "ExponentialDecay/Pow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "ExponentialDecay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire1/conv3x3/weight_loss_1/tags"
  input: "fire1/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire2/conv3x3/weight_loss_1/tags"
  input: "fire2/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire3/conv3x3/weight_loss_1/tags"
  input: "fire3/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire4/conv3x3/weight_loss_1/tags"
  input: "fire4/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire5/conv3x3/weight_loss_1/tags"
  input: "fire5/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire6/conv3x3/weight_loss_1/tags"
  input: "fire6/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/conv3x3/weight_loss_1"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/weight_loss_1"
  op: "ScalarSummary"
  input: "fire7/conv3x3/weight_loss_1/tags"
  input: "fire7/conv3x3/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/weight_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv12/weight_loss_1"
      }
    }
  }
}
node {
  name: "conv12/weight_loss_1"
  op: "ScalarSummary"
  input: "conv12/weight_loss_1/tags"
  input: "conv12/weight_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "class_regression/class_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "class_regression/class_loss_1"
      }
    }
  }
}
node {
  name: "class_regression/class_loss_1"
  op: "ScalarSummary"
  input: "class_regression/class_loss_1/tags"
  input: "class_regression/class_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confidence_score_regression/confidence_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "confidence_score_regression/confidence_loss_1"
      }
    }
  }
}
node {
  name: "confidence_score_regression/confidence_loss_1"
  op: "ScalarSummary"
  input: "confidence_score_regression/confidence_loss_1/tags"
  input: "confidence_score_regression/confidence_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bounding_box_regression/bbox_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bounding_box_regression/bbox_loss_1"
      }
    }
  }
}
node {
  name: "bounding_box_regression/bbox_loss_1"
  op: "ScalarSummary"
  input: "bounding_box_regression/bbox_loss_1/tags"
  input: "bounding_box_regression/bbox_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss_1"
      }
    }
  }
}
node {
  name: "total_loss_1"
  op: "ScalarSummary"
  input: "total_loss_1/tags"
  input: "total_loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
  device: "/device:GPU:0"
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency"
  input: "fire1/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency"
  input: "fire1/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire1/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire1/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire1/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_1"
  input: "fire2/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_1"
  input: "fire2/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire2/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire2/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire2/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_2"
  input: "fire3/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_2"
  input: "fire3/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire3/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire3/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire3/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_3"
  input: "fire4/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_3"
  input: "fire4/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire4/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire4/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire4/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_4"
  input: "fire5/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_4"
  input: "fire5/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire5/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire5/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire5/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_5"
  input: "fire6/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_5"
  input: "fire6/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire6/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire6/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire6/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_6"
  input: "fire7/conv3x3/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_6"
  input: "fire7/conv3x3/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire7/conv3x3/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/conv3x3/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/conv3x3/weight_loss_grad/Mul"
  input: "^gradients/fire7/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/conv3x3/weight_loss_grad/Mul_1"
  input: "^gradients/fire7/conv3x3/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/conv12/weight_loss_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_7"
  input: "conv12/weight_loss/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv12/weight_loss_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_7"
  input: "conv12/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv12/weight_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv12/weight_loss_grad/Mul"
  input: "^gradients/conv12/weight_loss_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/conv12/weight_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv12/weight_loss_grad/Mul"
  input: "^gradients/conv12/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/weight_loss_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/conv12/weight_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv12/weight_loss_grad/Mul_1"
  input: "^gradients/conv12/weight_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/weight_loss_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/class_regression/class_loss_grad/Shape"
  input: "gradients/class_regression/class_loss_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/total_loss_grad/tuple/control_dependency_8"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Sum"
  op: "Sum"
  input: "gradients/class_regression/class_loss_grad/RealDiv"
  input: "gradients/class_regression/class_loss_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/class_loss_grad/Sum"
  input: "gradients/class_regression/class_loss_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Neg"
  op: "Neg"
  input: "class_regression/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/class_regression/class_loss_grad/Neg"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/class_regression/class_loss_grad/RealDiv_1"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_8"
  input: "gradients/class_regression/class_loss_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/class_regression/class_loss_grad/mul"
  input: "gradients/class_regression/class_loss_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/class_regression/class_loss_grad/Sum_1"
  input: "gradients/class_regression/class_loss_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/class_loss_grad/Reshape"
  input: "^gradients/class_regression/class_loss_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/class_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/class_loss_grad/Reshape"
  input: "^gradients/class_regression/class_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/class_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/class_regression/class_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/class_loss_grad/Reshape_1"
  input: "^gradients/class_regression/class_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/class_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/total_loss_grad/tuple/control_dependency_9"
  input: "gradients/confidence_score_regression/confidence_loss_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/Tile"
  op: "Tile"
  input: "gradients/confidence_score_regression/confidence_loss_grad/Reshape"
  input: "gradients/confidence_score_regression/confidence_loss_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/confidence_loss_grad/truediv"
  op: "RealDiv"
  input: "gradients/confidence_score_regression/confidence_loss_grad/Tile"
  input: "gradients/confidence_score_regression/confidence_loss_grad/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Shape"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/total_loss_grad/tuple/control_dependency_10"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Sum"
  op: "Sum"
  input: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv"
  input: "gradients/bounding_box_regression/bbox_loss_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Sum"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Neg"
  op: "Neg"
  input: "bounding_box_regression/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Neg"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv_1"
  input: "interpret_output/num_objects"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_10"
  input: "gradients/bounding_box_regression/bbox_loss_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/bounding_box_regression/bbox_loss_grad/mul"
  input: "gradients/bounding_box_regression/bbox_loss_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Sum_1"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bounding_box_regression/bbox_loss_grad/Reshape"
  input: "^gradients/bounding_box_regression/bbox_loss_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Reshape"
  input: "^gradients/bounding_box_regression/bbox_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/bbox_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/bbox_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bounding_box_regression/bbox_loss_grad/Reshape_1"
  input: "^gradients/bounding_box_regression/bbox_loss_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/bbox_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire1/conv3x3/kernels/read"
  input: "gradients/fire1/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire2/conv3x3/kernels/read"
  input: "gradients/fire2/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire3/conv3x3/kernels/read"
  input: "gradients/fire3/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire4/conv3x3/kernels/read"
  input: "gradients/fire4/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire5/conv3x3/kernels/read"
  input: "gradients/fire5/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire6/conv3x3/kernels/read"
  input: "gradients/fire6/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/L2Loss_grad/mul"
  op: "Mul"
  input: "fire7/conv3x3/kernels/read"
  input: "gradients/fire7/conv3x3/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/conv12/L2Loss_grad/mul"
  op: "Mul"
  input: "conv12/kernels/read"
  input: "gradients/conv12/weight_loss_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/class_loss_grad/tuple/control_dependency"
  input: "gradients/class_regression/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/Sum_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/class_regression/Sum_grad/Reshape"
  input: "gradients/class_regression/Sum_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/add"
  op: "Add"
  input: "confidence_score_regression/Sum/reduction_indices"
  input: "gradients/confidence_score_regression/Sum_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/confidence_score_regression/Sum_grad/add"
  input: "gradients/confidence_score_regression/Sum_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/range"
  op: "Range"
  input: "gradients/confidence_score_regression/Sum_grad/range/start"
  input: "gradients/confidence_score_regression/Sum_grad/Size"
  input: "gradients/confidence_score_regression/Sum_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/confidence_score_regression/Sum_grad/Shape_1"
  input: "gradients/confidence_score_regression/Sum_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/confidence_score_regression/Sum_grad/range"
  input: "gradients/confidence_score_regression/Sum_grad/mod"
  input: "gradients/confidence_score_regression/Sum_grad/Shape"
  input: "gradients/confidence_score_regression/Sum_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/confidence_score_regression/Sum_grad/DynamicStitch"
  input: "gradients/confidence_score_regression/Sum_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/confidence_score_regression/Sum_grad/Shape"
  input: "gradients/confidence_score_regression/Sum_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/confidence_score_regression/confidence_loss_grad/truediv"
  input: "gradients/confidence_score_regression/Sum_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/confidence_score_regression/Sum_grad/Reshape"
  input: "gradients/confidence_score_regression/Sum_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/bounding_box_regression/bbox_loss_grad/tuple/control_dependency"
  input: "gradients/bounding_box_regression/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Sum_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/bounding_box_regression/Sum_grad/Reshape"
  input: "gradients/bounding_box_regression/Sum_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/class_regression/mul_3_grad/Shape"
  input: "gradients/class_regression/mul_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/class_regression/Sum_grad/Tile"
  input: "class_regression/mul_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/class_regression/mul_3_grad/Mul"
  input: "gradients/class_regression/mul_3_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/mul_3_grad/Sum"
  input: "gradients/class_regression/mul_3_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Mul_1"
  op: "Mul"
  input: "class_regression/mul_2"
  input: "gradients/class_regression/Sum_grad/Tile"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/class_regression/mul_3_grad/Mul_1"
  input: "gradients/class_regression/mul_3_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/class_regression/mul_3_grad/Sum_1"
  input: "gradients/class_regression/mul_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/mul_3_grad/Reshape"
  input: "^gradients/class_regression/mul_3_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/mul_3_grad/Reshape"
  input: "^gradients/class_regression/mul_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/mul_3_grad/Reshape_1"
  input: "^gradients/class_regression/mul_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/confidence_score_regression/Sum_grad/Tile"
  input: "confidence_score_regression/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/confidence_score_regression/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/confidence_score_regression/Sum_grad/Tile"
  input: "confidence_score_regression/Square"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/confidence_score_regression/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/confidence_score_regression/mul_2_grad/Mul"
  input: "^gradients/confidence_score_regression/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/confidence_score_regression/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/confidence_score_regression/mul_2_grad/Mul"
  input: "^gradients/confidence_score_regression/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/confidence_score_regression/mul_2_grad/Mul_1"
  input: "^gradients/confidence_score_regression/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bounding_box_regression/mul_1_grad/Shape"
  input: "gradients/bounding_box_regression/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/bounding_box_regression/Sum_grad/Tile"
  input: "bounding_box_regression/Square"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/bounding_box_regression/mul_1_grad/Mul"
  input: "gradients/bounding_box_regression/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bounding_box_regression/mul_1_grad/Sum"
  input: "gradients/bounding_box_regression/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Mul_1"
  op: "Mul"
  input: "bounding_box_regression/mul_1/x"
  input: "gradients/bounding_box_regression/Sum_grad/Tile"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/bounding_box_regression/mul_1_grad/Mul_1"
  input: "gradients/bounding_box_regression/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bounding_box_regression/mul_1_grad/Sum_1"
  input: "gradients/bounding_box_regression/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bounding_box_regression/mul_1_grad/Reshape"
  input: "^gradients/bounding_box_regression/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bounding_box_regression/mul_1_grad/Reshape"
  input: "^gradients/bounding_box_regression/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bounding_box_regression/mul_1_grad/Reshape_1"
  input: "^gradients/bounding_box_regression/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/class_regression/mul_3_grad/tuple/control_dependency"
  input: "batch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/class_regression/mul_3_grad/tuple/control_dependency"
  input: "class_regression/add_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/mul_2_grad/Mul"
  input: "^gradients/class_regression/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/mul_2_grad/Mul"
  input: "^gradients/class_regression/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/mul_2_grad/Mul_1"
  input: "^gradients/class_regression/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Square_grad/Const"
  op: "Const"
  input: "^gradients/confidence_score_regression/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Square_grad/Mul"
  op: "Mul"
  input: "confidence_score_regression/sub"
  input: "gradients/confidence_score_regression/Square_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/confidence_score_regression/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/confidence_score_regression/mul_2_grad/tuple/control_dependency"
  input: "gradients/confidence_score_regression/Square_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Square_grad/Const"
  op: "Const"
  input: "^gradients/bounding_box_regression/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Square_grad/Mul"
  op: "Mul"
  input: "bounding_box_regression/mul"
  input: "gradients/bounding_box_regression/Square_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/bounding_box_regression/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/bounding_box_regression/Square_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/mul_2_grad/tuple/control_dependency"
  input: "^gradients/class_regression/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/mul_2_grad/tuple/control_dependency"
  input: "^gradients/class_regression/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/sub_grad/Neg"
  op: "Neg"
  input: "gradients/confidence_score_regression/Square_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/confidence_score_regression/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/confidence_score_regression/Square_grad/Mul_1"
  input: "^gradients/confidence_score_regression/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/confidence_score_regression/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/confidence_score_regression/Square_grad/Mul_1"
  input: "^gradients/confidence_score_regression/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/confidence_score_regression/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/confidence_score_regression/sub_grad/Neg"
  input: "^gradients/confidence_score_regression/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/confidence_score_regression/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bounding_box_regression/mul_grad/Shape"
  input: "gradients/bounding_box_regression/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Mul"
  op: "Mul"
  input: "gradients/bounding_box_regression/Square_grad/Mul_1"
  input: "bounding_box_regression/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bounding_box_regression/mul_grad/Mul"
  input: "gradients/bounding_box_regression/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bounding_box_regression/mul_grad/Sum"
  input: "gradients/bounding_box_regression/mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Mul_1"
  op: "Mul"
  input: "batch:1"
  input: "gradients/bounding_box_regression/Square_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bounding_box_regression/mul_grad/Mul_1"
  input: "gradients/bounding_box_regression/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bounding_box_regression/mul_grad/Sum_1"
  input: "gradients/bounding_box_regression/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bounding_box_regression/mul_grad/Reshape"
  input: "^gradients/bounding_box_regression/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bounding_box_regression/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bounding_box_regression/mul_grad/Reshape"
  input: "^gradients/bounding_box_regression/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bounding_box_regression/mul_grad/Reshape_1"
  input: "^gradients/bounding_box_regression/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_grad/Mul"
  op: "Mul"
  input: "gradients/class_regression/add_2_grad/tuple/control_dependency"
  input: "class_regression/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/class_regression/add_2_grad/tuple/control_dependency"
  input: "batch:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/mul_grad/Mul"
  input: "^gradients/class_regression/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/mul_grad/Mul"
  input: "^gradients/class_regression/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/mul_grad/Mul_1"
  input: "^gradients/class_regression/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/class_regression/add_2_grad/tuple/control_dependency_1"
  input: "class_regression/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/class_regression/add_2_grad/tuple/control_dependency_1"
  input: "class_regression/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/mul_1_grad/Mul"
  input: "^gradients/class_regression/mul_1_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/mul_1_grad/Mul"
  input: "^gradients/class_regression/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/class_regression/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/mul_1_grad/Mul_1"
  input: "^gradients/class_regression/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/pred_confidence_score_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "interpret_output/pred_confidence_score"
  input: "gradients/confidence_score_regression/sub_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/sub_grad/Neg"
  op: "Neg"
  input: "gradients/bounding_box_regression/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bounding_box_regression/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bounding_box_regression/mul_grad/tuple/control_dependency_1"
  input: "^gradients/bounding_box_regression/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/bounding_box_regression/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bounding_box_regression/mul_grad/tuple/control_dependency_1"
  input: "^gradients/bounding_box_regression/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bounding_box_regression/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bounding_box_regression/sub_grad/Neg"
  input: "^gradients/bounding_box_regression/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bounding_box_regression/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/class_regression/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/class_regression/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/Neg_1_grad/Neg"
  op: "Neg"
  input: "gradients/class_regression/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/interpret_output/Reshape_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/interpret_output/pred_confidence_score_grad/SigmoidGrad"
  input: "gradients/interpret_output/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "class_regression/add"
  input: "^gradients/class_regression/Neg_grad/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/Log_grad/mul"
  op: "Mul"
  input: "gradients/class_regression/Neg_grad/Neg"
  input: "gradients/class_regression/Log_grad/Reciprocal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "class_regression/add_1"
  input: "^gradients/class_regression/Neg_1_grad/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/Log_1_grad/mul"
  op: "Mul"
  input: "gradients/class_regression/Neg_1_grad/Neg"
  input: "gradients/class_regression/Log_1_grad/Reciprocal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/interpret_output/strided_slice_grad/Shape"
  input: "interpret_output/strided_slice/stack"
  input: "interpret_output/strided_slice/stack_1"
  input: "interpret_output/strided_slice/stack_2"
  input: "gradients/interpret_output/Reshape_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/class_regression/add_grad/Shape"
  input: "gradients/class_regression/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Sum"
  op: "Sum"
  input: "gradients/class_regression/Log_grad/mul"
  input: "gradients/class_regression/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/add_grad/Sum"
  input: "gradients/class_regression/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/class_regression/Log_grad/mul"
  input: "gradients/class_regression/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/class_regression/add_grad/Sum_1"
  input: "gradients/class_regression/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/add_grad/Reshape"
  input: "^gradients/class_regression/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/add_grad/Reshape"
  input: "^gradients/class_regression/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/add_grad/Reshape_1"
  input: "^gradients/class_regression/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/class_regression/add_1_grad/Shape"
  input: "gradients/class_regression/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/class_regression/Log_1_grad/mul"
  input: "gradients/class_regression/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/add_1_grad/Sum"
  input: "gradients/class_regression/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/class_regression/Log_1_grad/mul"
  input: "gradients/class_regression/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/class_regression/add_1_grad/Sum_1"
  input: "gradients/class_regression/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/add_1_grad/Reshape"
  input: "^gradients/class_regression/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/add_1_grad/Reshape"
  input: "^gradients/class_regression/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/class_regression/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/add_1_grad/Reshape_1"
  input: "^gradients/class_regression/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000\\\005\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/class_regression/sub_1_grad/Shape"
  input: "gradients/class_regression/sub_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/class_regression/add_1_grad/tuple/control_dependency"
  input: "gradients/class_regression/sub_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/class_regression/sub_1_grad/Sum"
  input: "gradients/class_regression/sub_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/class_regression/add_1_grad/tuple/control_dependency"
  input: "gradients/class_regression/sub_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/class_regression/sub_1_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/class_regression/sub_1_grad/Neg"
  input: "gradients/class_regression/sub_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/class_regression/sub_1_grad/Reshape"
  input: "^gradients/class_regression/sub_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/class_regression/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/class_regression/sub_1_grad/Reshape"
  input: "^gradients/class_regression/sub_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/class_regression/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/class_regression/sub_1_grad/Reshape_1"
  input: "^gradients/class_regression/sub_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/class_regression/add_grad/tuple/control_dependency"
  input: "gradients/class_regression/sub_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/class_regression/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/pred_class_probs_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0k\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/pred_class_probs_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN"
  input: "gradients/interpret_output/pred_class_probs_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/interpret_output/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/interpret_output/pred_class_probs_grad/Reshape"
  input: "interpret_output/Softmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/interpret_output/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/interpret_output/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/interpret_output/Softmax_grad/mul"
  input: "gradients/interpret_output/Softmax_grad/Sum/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/interpret_output/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/interpret_output/pred_class_probs_grad/Reshape"
  input: "gradients/interpret_output/Softmax_grad/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/interpret_output/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/interpret_output/Softmax_grad/sub"
  input: "interpret_output/Softmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/interpret_output/Reshape_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/interpret_output/Softmax_grad/mul_1"
  input: "gradients/interpret_output/Reshape_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/interpret_output/strided_slice_1_grad/Shape"
  input: "interpret_output/strided_slice_1/stack"
  input: "interpret_output/strided_slice_1/stack_1"
  input: "interpret_output/strided_slice_1/stack_2"
  input: "gradients/interpret_output/Reshape_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/interpret_output/bbox_delta_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/bbox_delta_grad/Reshape"
  op: "Reshape"
  input: "gradients/bounding_box_regression/sub_grad/tuple/control_dependency"
  input: "gradients/interpret_output/bbox_delta_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\016\000\000\000\016\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/interpret_output/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/interpret_output/strided_slice_2_grad/Shape"
  input: "interpret_output/strided_slice_2/stack"
  input: "interpret_output/strided_slice_2/stack_1"
  input: "interpret_output/strided_slice_2/stack_2"
  input: "gradients/interpret_output/bbox_delta_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/interpret_output/strided_slice_grad/StridedSliceGrad"
  input: "gradients/interpret_output/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/interpret_output/strided_slice_2_grad/StridedSliceGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/interpret_output/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/conv12/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv12/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_1"
  input: "^gradients/conv12/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/conv12/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_1"
  input: "^gradients/conv12/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/interpret_output/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/conv12/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv12/bias_add_grad/BiasAddGrad"
  input: "^gradients/conv12/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/conv12/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire7/pool/MaxPool"
  input: "conv12/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv12/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv12/convolution_grad/ShapeN"
  input: "conv12/kernels/read"
  input: "gradients/conv12/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv12/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire7/pool/MaxPool"
  input: "gradients/conv12/convolution_grad/ShapeN:1"
  input: "gradients/conv12/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv12/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv12/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/conv12/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/conv12/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv12/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/conv12/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/conv12/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv12/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/conv12/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire7/pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "fire7/Relu"
  input: "fire7/pool/MaxPool"
  input: "gradients/conv12/convolution_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/conv12/L2Loss_grad/mul"
  input: "gradients/conv12/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv12/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire7/pool/MaxPool_grad/MaxPoolGrad"
  input: "fire7/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/Relu_grad/ReluGrad"
  input: "^gradients/fire7/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire7/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/Relu_grad/ReluGrad"
  input: "^gradients/fire7/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire7/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire7/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire7/clip_by_value_1/Minimum"
  input: "fire7/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/clip_by_value_1_grad/Shape"
  input: "gradients/fire7/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire7/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire7/add_grad/tuple/control_dependency"
  input: "gradients/fire7/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire7/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire7/clip_by_value_1_grad/zeros"
  input: "gradients/fire7/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1_grad/Select"
  input: "gradients/fire7/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/clip_by_value_1_grad/Sum"
  input: "gradients/fire7/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1_grad/Select_1"
  input: "gradients/fire7/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire7/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire7/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire7/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire7/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire7/bn/batchnorm/add_1"
  input: "fire7/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire7/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire7/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire7/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire7/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire7/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire7/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire7/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire7/conv3x3/bias_add"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire7/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire7/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire7/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire7/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire7/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire7/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire7/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire7/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire7/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire7/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "fire7/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "fire7/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire7/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire7/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire7/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire7/bn/batchnorm/Rsqrt"
  input: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire7/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire7/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire7/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire7/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire7/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire7/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire7/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire7/bn/moments/variance/reduction_indices"
  input: "gradients/fire7/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire7/bn/moments/variance_grad/add"
  input: "gradients/fire7/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire7/bn/moments/variance_grad/range/start"
  input: "gradients/fire7/bn/moments/variance_grad/Size"
  input: "gradients/fire7/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire7/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire7/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire7/bn/moments/variance_grad/range"
  input: "gradients/fire7/bn/moments/variance_grad/mod"
  input: "gradients/fire7/bn/moments/variance_grad/Shape"
  input: "gradients/fire7/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire7/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire7/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire7/bn/moments/variance_grad/Shape"
  input: "gradients/fire7/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire7/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire7/bn/moments/variance_grad/Reshape"
  input: "gradients/fire7/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 15680.0
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire7/bn/moments/variance_grad/Tile"
  input: "gradients/fire7/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire7/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire7/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire7/conv3x3/bias_add"
  input: "fire7/bn/moments/StopGradient"
  input: "^gradients/fire7/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire7/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire7/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire7/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire7/bn/moments/mean/reduction_indices"
  input: "gradients/fire7/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire7/bn/moments/mean_grad/add"
  input: "gradients/fire7/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire7/bn/moments/mean_grad/range/start"
  input: "gradients/fire7/bn/moments/mean_grad/Size"
  input: "gradients/fire7/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire7/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire7/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire7/bn/moments/mean_grad/range"
  input: "gradients/fire7/bn/moments/mean_grad/mod"
  input: "gradients/fire7/bn/moments/mean_grad/Shape"
  input: "gradients/fire7/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire7/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire7/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire7/bn/moments/mean_grad/Shape"
  input: "gradients/fire7/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire7/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire7/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire7/bn/moments/mean_grad/Reshape"
  input: "gradients/fire7/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 15680.0
      }
    }
  }
}
node {
  name: "gradients/fire7/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire7/bn/moments/mean_grad/Tile"
  input: "gradients/fire7/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/fire7/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_4"
  input: "^gradients/fire7/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_4"
  input: "^gradients/fire7/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire7/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire6/Relu"
  input: "fire7/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire7/conv3x3/convolution_grad/ShapeN"
  input: "fire7/conv3x3/kernels/read"
  input: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire6/Relu"
  input: "gradients/fire7/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire7/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire7/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire7/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire7/conv3x3/convolution_grad/tuple/control_dependency"
  input: "fire6/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/fire7/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire7/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire7/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire6/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/Relu_grad/ReluGrad"
  input: "^gradients/fire6/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire6/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/Relu_grad/ReluGrad"
  input: "^gradients/fire6/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire6/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire6/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire6/clip_by_value_1/Minimum"
  input: "fire6/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/clip_by_value_1_grad/Shape"
  input: "gradients/fire6/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire6/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire6/add_grad/tuple/control_dependency"
  input: "gradients/fire6/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire6/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire6/clip_by_value_1_grad/zeros"
  input: "gradients/fire6/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1_grad/Select"
  input: "gradients/fire6/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/clip_by_value_1_grad/Sum"
  input: "gradients/fire6/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1_grad/Select_1"
  input: "gradients/fire6/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire6/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire6/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire6/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire6/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire6/bn/batchnorm/add_1"
  input: "fire6/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire6/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire6/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire6/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire6/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire6/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire6/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire6/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire6/conv3x3/bias_add"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire6/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire6/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire6/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire6/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire6/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire6/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire6/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire6/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire6/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire6/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "fire6/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "fire6/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire6/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire6/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire6/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire6/bn/batchnorm/Rsqrt"
  input: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire6/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire6/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire6/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire6/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire6/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire6/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire6/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire6/bn/moments/variance/reduction_indices"
  input: "gradients/fire6/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire6/bn/moments/variance_grad/add"
  input: "gradients/fire6/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire6/bn/moments/variance_grad/range/start"
  input: "gradients/fire6/bn/moments/variance_grad/Size"
  input: "gradients/fire6/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire6/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire6/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire6/bn/moments/variance_grad/range"
  input: "gradients/fire6/bn/moments/variance_grad/mod"
  input: "gradients/fire6/bn/moments/variance_grad/Shape"
  input: "gradients/fire6/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire6/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire6/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire6/bn/moments/variance_grad/Shape"
  input: "gradients/fire6/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire6/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire6/bn/moments/variance_grad/Reshape"
  input: "gradients/fire6/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 15680.0
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire6/bn/moments/variance_grad/Tile"
  input: "gradients/fire6/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire6/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire6/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire6/conv3x3/bias_add"
  input: "fire6/bn/moments/StopGradient"
  input: "^gradients/fire6/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire6/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire6/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire6/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\034\000\000\000\034\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire6/bn/moments/mean/reduction_indices"
  input: "gradients/fire6/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire6/bn/moments/mean_grad/add"
  input: "gradients/fire6/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire6/bn/moments/mean_grad/range/start"
  input: "gradients/fire6/bn/moments/mean_grad/Size"
  input: "gradients/fire6/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire6/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire6/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire6/bn/moments/mean_grad/range"
  input: "gradients/fire6/bn/moments/mean_grad/mod"
  input: "gradients/fire6/bn/moments/mean_grad/Shape"
  input: "gradients/fire6/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire6/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire6/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire6/bn/moments/mean_grad/Shape"
  input: "gradients/fire6/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire6/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire6/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire6/bn/moments/mean_grad/Reshape"
  input: "gradients/fire6/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 15680.0
      }
    }
  }
}
node {
  name: "gradients/fire6/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire6/bn/moments/mean_grad/Tile"
  input: "gradients/fire6/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/fire6/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_7"
  input: "^gradients/fire6/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_7"
  input: "^gradients/fire6/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire6/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire5/pool/MaxPool"
  input: "fire6/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire6/conv3x3/convolution_grad/ShapeN"
  input: "fire6/conv3x3/kernels/read"
  input: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire5/pool/MaxPool"
  input: "gradients/fire6/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire6/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire6/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire6/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire5/pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "fire5/Relu"
  input: "fire5/pool/MaxPool"
  input: "gradients/fire6/conv3x3/convolution_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/fire6/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire6/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire6/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire5/pool/MaxPool_grad/MaxPoolGrad"
  input: "fire5/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/Relu_grad/ReluGrad"
  input: "^gradients/fire5/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire5/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/Relu_grad/ReluGrad"
  input: "^gradients/fire5/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire5/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire5/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire5/clip_by_value_1/Minimum"
  input: "fire5/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/clip_by_value_1_grad/Shape"
  input: "gradients/fire5/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire5/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire5/add_grad/tuple/control_dependency"
  input: "gradients/fire5/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire5/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire5/clip_by_value_1_grad/zeros"
  input: "gradients/fire5/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1_grad/Select"
  input: "gradients/fire5/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/clip_by_value_1_grad/Sum"
  input: "gradients/fire5/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1_grad/Select_1"
  input: "gradients/fire5/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire5/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire5/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire5/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire5/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire5/bn/batchnorm/add_1"
  input: "fire5/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire5/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire5/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire5/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire5/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire5/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire5/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire5/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire5/conv3x3/bias_add"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire5/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire5/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire5/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire5/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire5/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire5/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire5/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire5/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire5/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire5/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "fire5/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "fire5/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire5/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire5/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire5/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire5/bn/batchnorm/Rsqrt"
  input: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire5/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire5/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire5/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire5/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire5/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire5/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire5/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire5/bn/moments/variance/reduction_indices"
  input: "gradients/fire5/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire5/bn/moments/variance_grad/add"
  input: "gradients/fire5/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire5/bn/moments/variance_grad/range/start"
  input: "gradients/fire5/bn/moments/variance_grad/Size"
  input: "gradients/fire5/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire5/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire5/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire5/bn/moments/variance_grad/range"
  input: "gradients/fire5/bn/moments/variance_grad/mod"
  input: "gradients/fire5/bn/moments/variance_grad/Shape"
  input: "gradients/fire5/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire5/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire5/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire5/bn/moments/variance_grad/Shape"
  input: "gradients/fire5/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire5/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire5/bn/moments/variance_grad/Reshape"
  input: "gradients/fire5/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 62720.0
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire5/bn/moments/variance_grad/Tile"
  input: "gradients/fire5/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire5/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire5/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire5/conv3x3/bias_add"
  input: "fire5/bn/moments/StopGradient"
  input: "^gradients/fire5/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire5/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire5/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire5/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire5/bn/moments/mean/reduction_indices"
  input: "gradients/fire5/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire5/bn/moments/mean_grad/add"
  input: "gradients/fire5/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire5/bn/moments/mean_grad/range/start"
  input: "gradients/fire5/bn/moments/mean_grad/Size"
  input: "gradients/fire5/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire5/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire5/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire5/bn/moments/mean_grad/range"
  input: "gradients/fire5/bn/moments/mean_grad/mod"
  input: "gradients/fire5/bn/moments/mean_grad/Shape"
  input: "gradients/fire5/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire5/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire5/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire5/bn/moments/mean_grad/Shape"
  input: "gradients/fire5/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire5/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire5/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire5/bn/moments/mean_grad/Reshape"
  input: "gradients/fire5/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 62720.0
      }
    }
  }
}
node {
  name: "gradients/fire5/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire5/bn/moments/mean_grad/Tile"
  input: "gradients/fire5/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/fire5/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_10"
  input: "^gradients/fire5/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_10"
  input: "^gradients/fire5/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire5/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire4/Relu"
  input: "fire5/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire5/conv3x3/convolution_grad/ShapeN"
  input: "fire5/conv3x3/kernels/read"
  input: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire4/Relu"
  input: "gradients/fire5/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire5/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire5/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire5/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire5/conv3x3/convolution_grad/tuple/control_dependency"
  input: "fire4/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/fire5/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire5/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire5/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire4/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/Relu_grad/ReluGrad"
  input: "^gradients/fire4/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire4/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/Relu_grad/ReluGrad"
  input: "^gradients/fire4/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire4/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire4/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire4/clip_by_value_1/Minimum"
  input: "fire4/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/clip_by_value_1_grad/Shape"
  input: "gradients/fire4/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire4/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire4/add_grad/tuple/control_dependency"
  input: "gradients/fire4/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire4/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire4/clip_by_value_1_grad/zeros"
  input: "gradients/fire4/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1_grad/Select"
  input: "gradients/fire4/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/clip_by_value_1_grad/Sum"
  input: "gradients/fire4/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1_grad/Select_1"
  input: "gradients/fire4/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire4/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire4/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire4/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire4/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire4/bn/batchnorm/add_1"
  input: "fire4/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire4/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire4/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire4/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire4/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire4/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire4/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire4/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire4/conv3x3/bias_add"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire4/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire4/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire4/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire4/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire4/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire4/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire4/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire4/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire4/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire4/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "fire4/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "fire4/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire4/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire4/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire4/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire4/bn/batchnorm/Rsqrt"
  input: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire4/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire4/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire4/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire4/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire4/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire4/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire4/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire4/bn/moments/variance/reduction_indices"
  input: "gradients/fire4/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire4/bn/moments/variance_grad/add"
  input: "gradients/fire4/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire4/bn/moments/variance_grad/range/start"
  input: "gradients/fire4/bn/moments/variance_grad/Size"
  input: "gradients/fire4/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire4/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire4/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire4/bn/moments/variance_grad/range"
  input: "gradients/fire4/bn/moments/variance_grad/mod"
  input: "gradients/fire4/bn/moments/variance_grad/Shape"
  input: "gradients/fire4/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire4/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire4/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire4/bn/moments/variance_grad/Shape"
  input: "gradients/fire4/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire4/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire4/bn/moments/variance_grad/Reshape"
  input: "gradients/fire4/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 62720.0
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire4/bn/moments/variance_grad/Tile"
  input: "gradients/fire4/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire4/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire4/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire4/conv3x3/bias_add"
  input: "fire4/bn/moments/StopGradient"
  input: "^gradients/fire4/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire4/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire4/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire4/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\0008\000\000\0008\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire4/bn/moments/mean/reduction_indices"
  input: "gradients/fire4/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire4/bn/moments/mean_grad/add"
  input: "gradients/fire4/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire4/bn/moments/mean_grad/range/start"
  input: "gradients/fire4/bn/moments/mean_grad/Size"
  input: "gradients/fire4/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire4/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire4/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire4/bn/moments/mean_grad/range"
  input: "gradients/fire4/bn/moments/mean_grad/mod"
  input: "gradients/fire4/bn/moments/mean_grad/Shape"
  input: "gradients/fire4/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire4/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire4/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire4/bn/moments/mean_grad/Shape"
  input: "gradients/fire4/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire4/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire4/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire4/bn/moments/mean_grad/Reshape"
  input: "gradients/fire4/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 62720.0
      }
    }
  }
}
node {
  name: "gradients/fire4/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire4/bn/moments/mean_grad/Tile"
  input: "gradients/fire4/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/fire4/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_13"
  input: "^gradients/fire4/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_13"
  input: "^gradients/fire4/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire4/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire3/pool/MaxPool"
  input: "fire4/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire4/conv3x3/convolution_grad/ShapeN"
  input: "fire4/conv3x3/kernels/read"
  input: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire3/pool/MaxPool"
  input: "gradients/fire4/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire4/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire4/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire4/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire3/pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "fire3/Relu"
  input: "fire3/pool/MaxPool"
  input: "gradients/fire4/conv3x3/convolution_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/fire4/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire4/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire4/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire3/pool/MaxPool_grad/MaxPoolGrad"
  input: "fire3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/Relu_grad/ReluGrad"
  input: "^gradients/fire3/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/Relu_grad/ReluGrad"
  input: "^gradients/fire3/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire3/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire3/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire3/clip_by_value_1/Minimum"
  input: "fire3/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/clip_by_value_1_grad/Shape"
  input: "gradients/fire3/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire3/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire3/add_grad/tuple/control_dependency"
  input: "gradients/fire3/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire3/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire3/clip_by_value_1_grad/zeros"
  input: "gradients/fire3/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1_grad/Select"
  input: "gradients/fire3/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/clip_by_value_1_grad/Sum"
  input: "gradients/fire3/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1_grad/Select_1"
  input: "gradients/fire3/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire3/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire3/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire3/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire3/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire3/bn/batchnorm/add_1"
  input: "fire3/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire3/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire3/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire3/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire3/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire3/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire3/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire3/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire3/conv3x3/bias_add"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire3/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire3/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire3/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire3/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire3/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire3/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire3/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire3/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire3/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire3/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "fire3/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "fire3/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire3/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire3/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire3/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire3/bn/batchnorm/Rsqrt"
  input: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire3/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire3/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire3/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire3/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire3/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire3/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire3/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire3/bn/moments/variance/reduction_indices"
  input: "gradients/fire3/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire3/bn/moments/variance_grad/add"
  input: "gradients/fire3/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire3/bn/moments/variance_grad/range/start"
  input: "gradients/fire3/bn/moments/variance_grad/Size"
  input: "gradients/fire3/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire3/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire3/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire3/bn/moments/variance_grad/range"
  input: "gradients/fire3/bn/moments/variance_grad/mod"
  input: "gradients/fire3/bn/moments/variance_grad/Shape"
  input: "gradients/fire3/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire3/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire3/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire3/bn/moments/variance_grad/Shape"
  input: "gradients/fire3/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire3/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire3/bn/moments/variance_grad/Reshape"
  input: "gradients/fire3/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 250880.0
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire3/bn/moments/variance_grad/Tile"
  input: "gradients/fire3/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire3/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire3/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire3/conv3x3/bias_add"
  input: "fire3/bn/moments/StopGradient"
  input: "^gradients/fire3/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire3/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire3/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire3/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire3/bn/moments/mean/reduction_indices"
  input: "gradients/fire3/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire3/bn/moments/mean_grad/add"
  input: "gradients/fire3/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire3/bn/moments/mean_grad/range/start"
  input: "gradients/fire3/bn/moments/mean_grad/Size"
  input: "gradients/fire3/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire3/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire3/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire3/bn/moments/mean_grad/range"
  input: "gradients/fire3/bn/moments/mean_grad/mod"
  input: "gradients/fire3/bn/moments/mean_grad/Shape"
  input: "gradients/fire3/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire3/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire3/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire3/bn/moments/mean_grad/Shape"
  input: "gradients/fire3/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire3/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire3/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire3/bn/moments/mean_grad/Reshape"
  input: "gradients/fire3/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 250880.0
      }
    }
  }
}
node {
  name: "gradients/fire3/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire3/bn/moments/mean_grad/Tile"
  input: "gradients/fire3/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/fire3/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_16"
  input: "^gradients/fire3/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_16"
  input: "^gradients/fire3/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire3/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire2/Relu"
  input: "fire3/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire3/conv3x3/convolution_grad/ShapeN"
  input: "fire3/conv3x3/kernels/read"
  input: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire2/Relu"
  input: "gradients/fire3/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire3/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire3/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire3/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire3/conv3x3/convolution_grad/tuple/control_dependency"
  input: "fire2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/fire3/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire3/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire3/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/Relu_grad/ReluGrad"
  input: "^gradients/fire2/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/Relu_grad/ReluGrad"
  input: "^gradients/fire2/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire2/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire2/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire2/clip_by_value_1/Minimum"
  input: "fire2/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/clip_by_value_1_grad/Shape"
  input: "gradients/fire2/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire2/add_grad/tuple/control_dependency"
  input: "gradients/fire2/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire2/clip_by_value_1_grad/zeros"
  input: "gradients/fire2/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1_grad/Select"
  input: "gradients/fire2/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/clip_by_value_1_grad/Sum"
  input: "gradients/fire2/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1_grad/Select_1"
  input: "gradients/fire2/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire2/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire2/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire2/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire2/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire2/bn/batchnorm/add_1"
  input: "fire2/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire2/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire2/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire2/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire2/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire2/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire2/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire2/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire2/conv3x3/bias_add"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire2/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire2/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire2/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire2/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire2/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire2/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire2/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire2/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire2/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire2/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "fire2/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "fire2/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire2/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire2/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire2/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire2/bn/batchnorm/Rsqrt"
  input: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire2/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire2/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire2/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire2/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire2/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire2/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire2/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire2/bn/moments/variance/reduction_indices"
  input: "gradients/fire2/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire2/bn/moments/variance_grad/add"
  input: "gradients/fire2/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire2/bn/moments/variance_grad/range/start"
  input: "gradients/fire2/bn/moments/variance_grad/Size"
  input: "gradients/fire2/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire2/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire2/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire2/bn/moments/variance_grad/range"
  input: "gradients/fire2/bn/moments/variance_grad/mod"
  input: "gradients/fire2/bn/moments/variance_grad/Shape"
  input: "gradients/fire2/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire2/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire2/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire2/bn/moments/variance_grad/Shape"
  input: "gradients/fire2/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire2/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire2/bn/moments/variance_grad/Reshape"
  input: "gradients/fire2/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 250880.0
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire2/bn/moments/variance_grad/Tile"
  input: "gradients/fire2/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire2/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire2/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire2/conv3x3/bias_add"
  input: "fire2/bn/moments/StopGradient"
  input: "^gradients/fire2/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire2/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire2/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire2/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000p\000\000\000p\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire2/bn/moments/mean/reduction_indices"
  input: "gradients/fire2/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire2/bn/moments/mean_grad/add"
  input: "gradients/fire2/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire2/bn/moments/mean_grad/range/start"
  input: "gradients/fire2/bn/moments/mean_grad/Size"
  input: "gradients/fire2/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire2/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire2/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire2/bn/moments/mean_grad/range"
  input: "gradients/fire2/bn/moments/mean_grad/mod"
  input: "gradients/fire2/bn/moments/mean_grad/Shape"
  input: "gradients/fire2/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire2/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire2/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire2/bn/moments/mean_grad/Shape"
  input: "gradients/fire2/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire2/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire2/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire2/bn/moments/mean_grad/Reshape"
  input: "gradients/fire2/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 250880.0
      }
    }
  }
}
node {
  name: "gradients/fire2/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire2/bn/moments/mean_grad/Tile"
  input: "gradients/fire2/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/fire2/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_19"
  input: "^gradients/fire2/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_19"
  input: "^gradients/fire2/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire2/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "fire1/pool/MaxPool"
  input: "fire2/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire2/conv3x3/convolution_grad/ShapeN"
  input: "fire2/conv3x3/kernels/read"
  input: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fire1/pool/MaxPool"
  input: "gradients/fire2/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire2/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire2/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire2/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/fire1/pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "fire1/Relu"
  input: "fire1/pool/MaxPool"
  input: "gradients/fire2/conv3x3/convolution_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/fire2/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire2/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire2/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/fire1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fire1/pool/MaxPool_grad/MaxPoolGrad"
  input: "fire1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/Relu_grad/ReluGrad"
  input: "^gradients/fire1/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/Relu_grad/ReluGrad"
  input: "^gradients/fire1/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/fire1/clip_by_value_1_grad/Shape_2"
  input: "gradients/fire1/clip_by_value_1_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fire1/clip_by_value_1/Minimum"
  input: "fire1/clip_by_value_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/clip_by_value_1_grad/Shape"
  input: "gradients/fire1/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/fire1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire1/add_grad/tuple/control_dependency"
  input: "gradients/fire1/clip_by_value_1_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/fire1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/fire1/clip_by_value_1_grad/zeros"
  input: "gradients/fire1/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1_grad/Select"
  input: "gradients/fire1/clip_by_value_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/clip_by_value_1_grad/Sum"
  input: "gradients/fire1/clip_by_value_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1_grad/Select_1"
  input: "gradients/fire1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/clip_by_value_1_grad/Sum_1"
  input: "gradients/fire1/clip_by_value_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire1/clip_by_value_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/clip_by_value_1_grad/Reshape"
  input: "^gradients/fire1/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/clip_by_value_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/fire1/clip_by_value_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fire1/bn/batchnorm/add_1"
  input: "fire1/clip_by_value_1/Minimum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire1/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/fire1/clip_by_value_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire1/clip_by_value_1/Minimum_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/fire1/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/fire1/clip_by_value_1/Minimum_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Shape"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Sum"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fire1/bn/batchnorm/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fire1/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fire1/conv3x3/bias_add"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fire1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire1/bn/batchnorm/sub_grad/Neg"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fire1/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/sub_grad/Neg"
  input: "^gradients/fire1/bn/batchnorm/sub_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire1/bn/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fire1/bn/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire1/bn/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fire1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fire1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fire1/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_21"
  input: "fire1/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_21"
  input: "fire1/bn/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire1/bn/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_grad/Mul"
  input: "^gradients/fire1/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fire1/bn/batchnorm/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fire1/bn/batchnorm/Rsqrt"
  input: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/bn/batchnorm/add_grad/Shape"
  input: "gradients/fire1/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire1/bn/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/add_grad/Sum"
  input: "gradients/fire1/bn/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fire1/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/add_grad/Sum_1"
  input: "gradients/fire1/bn/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/add_grad/Reshape"
  input: "^gradients/fire1/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fire1/bn/batchnorm/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/add"
  op: "Add"
  input: "fire1/bn/moments/variance/reduction_indices"
  input: "gradients/fire1/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/fire1/bn/moments/variance_grad/add"
  input: "gradients/fire1/bn/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/fire1/bn/moments/variance_grad/range/start"
  input: "gradients/fire1/bn/moments/variance_grad/Size"
  input: "gradients/fire1/bn/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/fire1/bn/moments/variance_grad/Shape_1"
  input: "gradients/fire1/bn/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire1/bn/moments/variance_grad/range"
  input: "gradients/fire1/bn/moments/variance_grad/mod"
  input: "gradients/fire1/bn/moments/variance_grad/Shape"
  input: "gradients/fire1/bn/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire1/bn/moments/variance_grad/DynamicStitch"
  input: "gradients/fire1/bn/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire1/bn/moments/variance_grad/Shape"
  input: "gradients/fire1/bn/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fire1/bn/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/fire1/bn/moments/variance_grad/Reshape"
  input: "gradients/fire1/bn/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1003520.0
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire1/bn/moments/variance_grad/Tile"
  input: "gradients/fire1/bn/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fire1/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/fire1/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fire1/conv3x3/bias_add"
  input: "fire1/bn/moments/StopGradient"
  input: "^gradients/fire1/bn/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/mul"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire1/bn/moments/SquaredDifference_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fire1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fire1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\024\000\000\000\340\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/add"
  op: "Add"
  input: "fire1/bn/moments/mean/reduction_indices"
  input: "gradients/fire1/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fire1/bn/moments/mean_grad/add"
  input: "gradients/fire1/bn/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fire1/bn/moments/mean_grad/range/start"
  input: "gradients/fire1/bn/moments/mean_grad/Size"
  input: "gradients/fire1/bn/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fire1/bn/moments/mean_grad/Shape_1"
  input: "gradients/fire1/bn/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fire1/bn/moments/mean_grad/range"
  input: "gradients/fire1/bn/moments/mean_grad/mod"
  input: "gradients/fire1/bn/moments/mean_grad/Shape"
  input: "gradients/fire1/bn/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fire1/bn/moments/mean_grad/DynamicStitch"
  input: "gradients/fire1/bn/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fire1/bn/moments/mean_grad/Shape"
  input: "gradients/fire1/bn/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fire1/bn/moments/Squeeze_grad/Reshape"
  input: "gradients/fire1/bn/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fire1/bn/moments/mean_grad/Reshape"
  input: "gradients/fire1/bn/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1003520.0
      }
    }
  }
}
node {
  name: "gradients/fire1/bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fire1/bn/moments/mean_grad/Tile"
  input: "gradients/fire1/bn/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/fire1/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/bias_add_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/bias_add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_22"
  input: "^gradients/fire1/conv3x3/bias_add_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_22"
  input: "^gradients/fire1/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/conv3x3/bias_add_grad/BiasAddGrad"
  input: "^gradients/fire1/conv3x3/bias_add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/bias_add_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "batch"
  input: "fire1/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fire1/conv3x3/convolution_grad/ShapeN"
  input: "fire1/conv3x3/kernels/read"
  input: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "batch"
  input: "gradients/fire1/conv3x3/convolution_grad/ShapeN:1"
  input: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/fire1/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/fire1/conv3x3/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/fire1/conv3x3/convolution_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/fire1/conv3x3/L2Loss_grad/mul"
  input: "gradients/fire1/conv3x3/convolution_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fire1/conv3x3/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/mul"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "gradients/AddN_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm/mul"
  input: "clip_gradient/clip_by_norm/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm/Sum"
  input: "clip_gradient/clip_by_norm/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm/ones_like/Shape"
  input: "clip_gradient/clip_by_norm/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm/Greater"
  input: "clip_gradient/clip_by_norm/Sum"
  input: "clip_gradient/clip_by_norm/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm/Greater"
  input: "clip_gradient/clip_by_norm/Sqrt"
  input: "clip_gradient/clip_by_norm/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/mul_1"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "clip_gradient/clip_by_norm/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm/Select_1"
  input: "clip_gradient/clip_by_norm/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm/mul_1"
  input: "clip_gradient/clip_by_norm/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm"
  op: "Identity"
  input: "clip_gradient/clip_by_norm/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/mul"
  op: "Mul"
  input: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_1/mul"
  input: "clip_gradient/clip_by_norm_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_1/Sum"
  input: "clip_gradient/clip_by_norm_1/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_1/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_1/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_1/Greater"
  input: "clip_gradient/clip_by_norm_1/Sum"
  input: "clip_gradient/clip_by_norm_1/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_1/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_1/Greater"
  input: "clip_gradient/clip_by_norm_1/Sqrt"
  input: "clip_gradient/clip_by_norm_1/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "gradients/fire1/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_1/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_1/Select_1"
  input: "clip_gradient/clip_by_norm_1/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_1/mul_1"
  input: "clip_gradient/clip_by_norm_1/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_1"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_1/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/mul"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_2/mul"
  input: "clip_gradient/clip_by_norm_2/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_2/Sum"
  input: "clip_gradient/clip_by_norm_2/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_2/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_2/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_2/Greater"
  input: "clip_gradient/clip_by_norm_2/Sum"
  input: "clip_gradient/clip_by_norm_2/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_2/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_2/Greater"
  input: "clip_gradient/clip_by_norm_2/Sqrt"
  input: "clip_gradient/clip_by_norm_2/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/mul_1"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_2/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_2/Select_1"
  input: "clip_gradient/clip_by_norm_2/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_2/mul_1"
  input: "clip_gradient/clip_by_norm_2/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_2"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_2/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/mul"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_3/mul"
  input: "clip_gradient/clip_by_norm_3/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_3/Sum"
  input: "clip_gradient/clip_by_norm_3/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_3/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_3/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_3/Greater"
  input: "clip_gradient/clip_by_norm_3/Sum"
  input: "clip_gradient/clip_by_norm_3/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_3/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_3/Greater"
  input: "clip_gradient/clip_by_norm_3/Sqrt"
  input: "clip_gradient/clip_by_norm_3/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/mul_1"
  op: "Mul"
  input: "gradients/fire1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_3/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_3/Select_1"
  input: "clip_gradient/clip_by_norm_3/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_3/mul_1"
  input: "clip_gradient/clip_by_norm_3/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_3"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_3/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "gradients/AddN_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_4/mul"
  input: "clip_gradient/clip_by_norm_4/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_4/Sum"
  input: "clip_gradient/clip_by_norm_4/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_4/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_4/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_4/Greater"
  input: "clip_gradient/clip_by_norm_4/Sum"
  input: "clip_gradient/clip_by_norm_4/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_4/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_4/Greater"
  input: "clip_gradient/clip_by_norm_4/Sqrt"
  input: "clip_gradient/clip_by_norm_4/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/mul_1"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "clip_gradient/clip_by_norm_4/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_4/Select_1"
  input: "clip_gradient/clip_by_norm_4/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_4/mul_1"
  input: "clip_gradient/clip_by_norm_4/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_4"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_4/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/mul"
  op: "Mul"
  input: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_5/mul"
  input: "clip_gradient/clip_by_norm_5/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_5/Sum"
  input: "clip_gradient/clip_by_norm_5/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_5/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_5/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_5/Greater"
  input: "clip_gradient/clip_by_norm_5/Sum"
  input: "clip_gradient/clip_by_norm_5/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_5/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_5/Greater"
  input: "clip_gradient/clip_by_norm_5/Sqrt"
  input: "clip_gradient/clip_by_norm_5/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/mul_1"
  op: "Mul"
  input: "gradients/fire2/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_5/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_5/Select_1"
  input: "clip_gradient/clip_by_norm_5/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_5/mul_1"
  input: "clip_gradient/clip_by_norm_5/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_5"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_5/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/mul"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_6/mul"
  input: "clip_gradient/clip_by_norm_6/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_6/Sum"
  input: "clip_gradient/clip_by_norm_6/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_6/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_6/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_6/Greater"
  input: "clip_gradient/clip_by_norm_6/Sum"
  input: "clip_gradient/clip_by_norm_6/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_6/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_6/Greater"
  input: "clip_gradient/clip_by_norm_6/Sqrt"
  input: "clip_gradient/clip_by_norm_6/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/mul_1"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_6/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_6/Select_1"
  input: "clip_gradient/clip_by_norm_6/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_6/mul_1"
  input: "clip_gradient/clip_by_norm_6/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_6"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_6/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/mul"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_7/mul"
  input: "clip_gradient/clip_by_norm_7/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_7/Sum"
  input: "clip_gradient/clip_by_norm_7/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_7/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_7/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_7/Greater"
  input: "clip_gradient/clip_by_norm_7/Sum"
  input: "clip_gradient/clip_by_norm_7/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_7/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_7/Greater"
  input: "clip_gradient/clip_by_norm_7/Sqrt"
  input: "clip_gradient/clip_by_norm_7/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/mul_1"
  op: "Mul"
  input: "gradients/fire2/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_7/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_7/Select_1"
  input: "clip_gradient/clip_by_norm_7/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_7/mul_1"
  input: "clip_gradient/clip_by_norm_7/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_7"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_7/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/mul"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "gradients/AddN_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_8/mul"
  input: "clip_gradient/clip_by_norm_8/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_8/Sum"
  input: "clip_gradient/clip_by_norm_8/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_8/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_8/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_8/Greater"
  input: "clip_gradient/clip_by_norm_8/Sum"
  input: "clip_gradient/clip_by_norm_8/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_8/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_8/Greater"
  input: "clip_gradient/clip_by_norm_8/Sqrt"
  input: "clip_gradient/clip_by_norm_8/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/mul_1"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "clip_gradient/clip_by_norm_8/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_8/Select_1"
  input: "clip_gradient/clip_by_norm_8/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_8/mul_1"
  input: "clip_gradient/clip_by_norm_8/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_8"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_8/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/mul"
  op: "Mul"
  input: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_9/mul"
  input: "clip_gradient/clip_by_norm_9/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_9/Sum"
  input: "clip_gradient/clip_by_norm_9/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_9/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_9/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_9/Greater"
  input: "clip_gradient/clip_by_norm_9/Sum"
  input: "clip_gradient/clip_by_norm_9/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_9/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_9/Greater"
  input: "clip_gradient/clip_by_norm_9/Sqrt"
  input: "clip_gradient/clip_by_norm_9/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/mul_1"
  op: "Mul"
  input: "gradients/fire3/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_9/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_9/Select_1"
  input: "clip_gradient/clip_by_norm_9/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_9/mul_1"
  input: "clip_gradient/clip_by_norm_9/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_9"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_9/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/mul"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_10/mul"
  input: "clip_gradient/clip_by_norm_10/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_10/Sum"
  input: "clip_gradient/clip_by_norm_10/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_10/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_10/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_10/Greater"
  input: "clip_gradient/clip_by_norm_10/Sum"
  input: "clip_gradient/clip_by_norm_10/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_10/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_10/Greater"
  input: "clip_gradient/clip_by_norm_10/Sqrt"
  input: "clip_gradient/clip_by_norm_10/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/mul_1"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_10/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_10/Select_1"
  input: "clip_gradient/clip_by_norm_10/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_10/mul_1"
  input: "clip_gradient/clip_by_norm_10/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_10"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_10/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/mul"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_11/mul"
  input: "clip_gradient/clip_by_norm_11/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_11/Sum"
  input: "clip_gradient/clip_by_norm_11/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_11/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_11/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_11/Greater"
  input: "clip_gradient/clip_by_norm_11/Sum"
  input: "clip_gradient/clip_by_norm_11/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_11/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_11/Greater"
  input: "clip_gradient/clip_by_norm_11/Sqrt"
  input: "clip_gradient/clip_by_norm_11/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/mul_1"
  op: "Mul"
  input: "gradients/fire3/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_11/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_11/Select_1"
  input: "clip_gradient/clip_by_norm_11/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_11/mul_1"
  input: "clip_gradient/clip_by_norm_11/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_11"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_11/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/mul"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "gradients/AddN_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_12/mul"
  input: "clip_gradient/clip_by_norm_12/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_12/Sum"
  input: "clip_gradient/clip_by_norm_12/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_12/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_12/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_12/Greater"
  input: "clip_gradient/clip_by_norm_12/Sum"
  input: "clip_gradient/clip_by_norm_12/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_12/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_12/Greater"
  input: "clip_gradient/clip_by_norm_12/Sqrt"
  input: "clip_gradient/clip_by_norm_12/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/mul_1"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "clip_gradient/clip_by_norm_12/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_12/Select_1"
  input: "clip_gradient/clip_by_norm_12/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_12/mul_1"
  input: "clip_gradient/clip_by_norm_12/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_12"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_12/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/mul"
  op: "Mul"
  input: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_13/mul"
  input: "clip_gradient/clip_by_norm_13/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_13/Sum"
  input: "clip_gradient/clip_by_norm_13/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_13/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_13/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_13/Greater"
  input: "clip_gradient/clip_by_norm_13/Sum"
  input: "clip_gradient/clip_by_norm_13/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_13/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_13/Greater"
  input: "clip_gradient/clip_by_norm_13/Sqrt"
  input: "clip_gradient/clip_by_norm_13/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/mul_1"
  op: "Mul"
  input: "gradients/fire4/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_13/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_13/Select_1"
  input: "clip_gradient/clip_by_norm_13/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_13/mul_1"
  input: "clip_gradient/clip_by_norm_13/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_13"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_13/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/mul"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_14/mul"
  input: "clip_gradient/clip_by_norm_14/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_14/Sum"
  input: "clip_gradient/clip_by_norm_14/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_14/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_14/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_14/Greater"
  input: "clip_gradient/clip_by_norm_14/Sum"
  input: "clip_gradient/clip_by_norm_14/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_14/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_14/Greater"
  input: "clip_gradient/clip_by_norm_14/Sqrt"
  input: "clip_gradient/clip_by_norm_14/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/mul_1"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_14/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_14/Select_1"
  input: "clip_gradient/clip_by_norm_14/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_14/mul_1"
  input: "clip_gradient/clip_by_norm_14/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_14"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_14/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/mul"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_15/mul"
  input: "clip_gradient/clip_by_norm_15/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_15/Sum"
  input: "clip_gradient/clip_by_norm_15/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_15/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_15/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_15/Greater"
  input: "clip_gradient/clip_by_norm_15/Sum"
  input: "clip_gradient/clip_by_norm_15/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_15/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_15/Greater"
  input: "clip_gradient/clip_by_norm_15/Sqrt"
  input: "clip_gradient/clip_by_norm_15/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/mul_1"
  op: "Mul"
  input: "gradients/fire4/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_15/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_15/Select_1"
  input: "clip_gradient/clip_by_norm_15/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_15/mul_1"
  input: "clip_gradient/clip_by_norm_15/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_15"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_15/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/mul"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "gradients/AddN_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_16/mul"
  input: "clip_gradient/clip_by_norm_16/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_16/Sum"
  input: "clip_gradient/clip_by_norm_16/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_16/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_16/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_16/Greater"
  input: "clip_gradient/clip_by_norm_16/Sum"
  input: "clip_gradient/clip_by_norm_16/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_16/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_16/Greater"
  input: "clip_gradient/clip_by_norm_16/Sqrt"
  input: "clip_gradient/clip_by_norm_16/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/mul_1"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "clip_gradient/clip_by_norm_16/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_16/Select_1"
  input: "clip_gradient/clip_by_norm_16/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_16/mul_1"
  input: "clip_gradient/clip_by_norm_16/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_16"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_16/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/mul"
  op: "Mul"
  input: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_17/mul"
  input: "clip_gradient/clip_by_norm_17/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_17/Sum"
  input: "clip_gradient/clip_by_norm_17/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_17/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_17/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_17/Greater"
  input: "clip_gradient/clip_by_norm_17/Sum"
  input: "clip_gradient/clip_by_norm_17/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_17/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_17/Greater"
  input: "clip_gradient/clip_by_norm_17/Sqrt"
  input: "clip_gradient/clip_by_norm_17/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/mul_1"
  op: "Mul"
  input: "gradients/fire5/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_17/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_17/Select_1"
  input: "clip_gradient/clip_by_norm_17/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_17/mul_1"
  input: "clip_gradient/clip_by_norm_17/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_17"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_17/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/mul"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_18/mul"
  input: "clip_gradient/clip_by_norm_18/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_18/Sum"
  input: "clip_gradient/clip_by_norm_18/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_18/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_18/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_18/Greater"
  input: "clip_gradient/clip_by_norm_18/Sum"
  input: "clip_gradient/clip_by_norm_18/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_18/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_18/Greater"
  input: "clip_gradient/clip_by_norm_18/Sqrt"
  input: "clip_gradient/clip_by_norm_18/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/mul_1"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_18/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_18/Select_1"
  input: "clip_gradient/clip_by_norm_18/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_18/mul_1"
  input: "clip_gradient/clip_by_norm_18/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_18"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_18/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/mul"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_19/mul"
  input: "clip_gradient/clip_by_norm_19/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_19/Sum"
  input: "clip_gradient/clip_by_norm_19/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_19/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_19/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_19/Greater"
  input: "clip_gradient/clip_by_norm_19/Sum"
  input: "clip_gradient/clip_by_norm_19/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_19/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_19/Greater"
  input: "clip_gradient/clip_by_norm_19/Sqrt"
  input: "clip_gradient/clip_by_norm_19/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/mul_1"
  op: "Mul"
  input: "gradients/fire5/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_19/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_19/Select_1"
  input: "clip_gradient/clip_by_norm_19/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_19/mul_1"
  input: "clip_gradient/clip_by_norm_19/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_19"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_19/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/AddN_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_20/mul"
  input: "clip_gradient/clip_by_norm_20/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_20/Sum"
  input: "clip_gradient/clip_by_norm_20/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_20/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_20/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_20/Greater"
  input: "clip_gradient/clip_by_norm_20/Sum"
  input: "clip_gradient/clip_by_norm_20/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_20/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_20/Greater"
  input: "clip_gradient/clip_by_norm_20/Sqrt"
  input: "clip_gradient/clip_by_norm_20/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/mul_1"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "clip_gradient/clip_by_norm_20/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_20/Select_1"
  input: "clip_gradient/clip_by_norm_20/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_20/mul_1"
  input: "clip_gradient/clip_by_norm_20/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_20"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_20/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/mul"
  op: "Mul"
  input: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_21/mul"
  input: "clip_gradient/clip_by_norm_21/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_21/Sum"
  input: "clip_gradient/clip_by_norm_21/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_21/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_21/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_21/Greater"
  input: "clip_gradient/clip_by_norm_21/Sum"
  input: "clip_gradient/clip_by_norm_21/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_21/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_21/Greater"
  input: "clip_gradient/clip_by_norm_21/Sqrt"
  input: "clip_gradient/clip_by_norm_21/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/mul_1"
  op: "Mul"
  input: "gradients/fire6/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_21/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_21/Select_1"
  input: "clip_gradient/clip_by_norm_21/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_21/mul_1"
  input: "clip_gradient/clip_by_norm_21/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_21"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_21/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/mul"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_22/mul"
  input: "clip_gradient/clip_by_norm_22/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_22/Sum"
  input: "clip_gradient/clip_by_norm_22/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_22/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_22/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_22/Greater"
  input: "clip_gradient/clip_by_norm_22/Sum"
  input: "clip_gradient/clip_by_norm_22/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_22/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_22/Greater"
  input: "clip_gradient/clip_by_norm_22/Sqrt"
  input: "clip_gradient/clip_by_norm_22/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/mul_1"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_22/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_22/Select_1"
  input: "clip_gradient/clip_by_norm_22/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_22/mul_1"
  input: "clip_gradient/clip_by_norm_22/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_22"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_22/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/mul"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_23/mul"
  input: "clip_gradient/clip_by_norm_23/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_23/Sum"
  input: "clip_gradient/clip_by_norm_23/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_23/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_23/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_23/Greater"
  input: "clip_gradient/clip_by_norm_23/Sum"
  input: "clip_gradient/clip_by_norm_23/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_23/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_23/Greater"
  input: "clip_gradient/clip_by_norm_23/Sqrt"
  input: "clip_gradient/clip_by_norm_23/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/mul_1"
  op: "Mul"
  input: "gradients/fire6/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_23/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_23/Select_1"
  input: "clip_gradient/clip_by_norm_23/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_23/mul_1"
  input: "clip_gradient/clip_by_norm_23/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_23"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_23/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/mul"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "gradients/AddN_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_24/mul"
  input: "clip_gradient/clip_by_norm_24/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_24/Sum"
  input: "clip_gradient/clip_by_norm_24/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_24/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_24/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_24/Greater"
  input: "clip_gradient/clip_by_norm_24/Sum"
  input: "clip_gradient/clip_by_norm_24/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_24/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_24/Greater"
  input: "clip_gradient/clip_by_norm_24/Sqrt"
  input: "clip_gradient/clip_by_norm_24/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/mul_1"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "clip_gradient/clip_by_norm_24/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_24/Select_1"
  input: "clip_gradient/clip_by_norm_24/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_24/mul_1"
  input: "clip_gradient/clip_by_norm_24/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_24"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_24/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/mul"
  op: "Mul"
  input: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_25/mul"
  input: "clip_gradient/clip_by_norm_25/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_25/Sum"
  input: "clip_gradient/clip_by_norm_25/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_25/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_25/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_25/Greater"
  input: "clip_gradient/clip_by_norm_25/Sum"
  input: "clip_gradient/clip_by_norm_25/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_25/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_25/Greater"
  input: "clip_gradient/clip_by_norm_25/Sqrt"
  input: "clip_gradient/clip_by_norm_25/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/mul_1"
  op: "Mul"
  input: "gradients/fire7/conv3x3/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_25/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_25/Select_1"
  input: "clip_gradient/clip_by_norm_25/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_25/mul_1"
  input: "clip_gradient/clip_by_norm_25/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_25"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_25/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/mul"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_26/mul"
  input: "clip_gradient/clip_by_norm_26/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_26/Sum"
  input: "clip_gradient/clip_by_norm_26/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_26/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_26/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_26/Greater"
  input: "clip_gradient/clip_by_norm_26/Sum"
  input: "clip_gradient/clip_by_norm_26/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_26/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_26/Greater"
  input: "clip_gradient/clip_by_norm_26/Sqrt"
  input: "clip_gradient/clip_by_norm_26/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/mul_1"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_gradient/clip_by_norm_26/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_26/Select_1"
  input: "clip_gradient/clip_by_norm_26/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_26/mul_1"
  input: "clip_gradient/clip_by_norm_26/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_26"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_26/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/mul"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_27/mul"
  input: "clip_gradient/clip_by_norm_27/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_27/Sum"
  input: "clip_gradient/clip_by_norm_27/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_27/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_27/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_27/Greater"
  input: "clip_gradient/clip_by_norm_27/Sum"
  input: "clip_gradient/clip_by_norm_27/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_27/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_27/Greater"
  input: "clip_gradient/clip_by_norm_27/Sqrt"
  input: "clip_gradient/clip_by_norm_27/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/mul_1"
  op: "Mul"
  input: "gradients/fire7/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_27/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_27/Select_1"
  input: "clip_gradient/clip_by_norm_27/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_27/mul_1"
  input: "clip_gradient/clip_by_norm_27/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_27"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_27/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "gradients/AddN_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_28/mul"
  input: "clip_gradient/clip_by_norm_28/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_28/Sum"
  input: "clip_gradient/clip_by_norm_28/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_28/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_28/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_28/Greater"
  input: "clip_gradient/clip_by_norm_28/Sum"
  input: "clip_gradient/clip_by_norm_28/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_28/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_28/Greater"
  input: "clip_gradient/clip_by_norm_28/Sqrt"
  input: "clip_gradient/clip_by_norm_28/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/mul_1"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "clip_gradient/clip_by_norm_28/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_28/Select_1"
  input: "clip_gradient/clip_by_norm_28/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_28/mul_1"
  input: "clip_gradient/clip_by_norm_28/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_28"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_28/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/mul"
  op: "Mul"
  input: "gradients/conv12/bias_add_grad/tuple/control_dependency_1"
  input: "gradients/conv12/bias_add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Sum"
  op: "Sum"
  input: "clip_gradient/clip_by_norm_29/mul"
  input: "clip_gradient/clip_by_norm_29/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Greater"
  op: "Greater"
  input: "clip_gradient/clip_by_norm_29/Sum"
  input: "clip_gradient/clip_by_norm_29/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/ones_like/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/ones_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/ones_like"
  op: "Fill"
  input: "clip_gradient/clip_by_norm_29/ones_like/Shape"
  input: "clip_gradient/clip_by_norm_29/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Select"
  op: "Select"
  input: "clip_gradient/clip_by_norm_29/Greater"
  input: "clip_gradient/clip_by_norm_29/Sum"
  input: "clip_gradient/clip_by_norm_29/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Sqrt"
  op: "Sqrt"
  input: "clip_gradient/clip_by_norm_29/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Select_1"
  op: "Select"
  input: "clip_gradient/clip_by_norm_29/Greater"
  input: "clip_gradient/clip_by_norm_29/Sqrt"
  input: "clip_gradient/clip_by_norm_29/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/mul_1"
  op: "Mul"
  input: "gradients/conv12/bias_add_grad/tuple/control_dependency_1"
  input: "clip_gradient/clip_by_norm_29/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/Maximum"
  op: "Maximum"
  input: "clip_gradient/clip_by_norm_29/Select_1"
  input: "clip_gradient/clip_by_norm_29/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29/truediv"
  op: "RealDiv"
  input: "clip_gradient/clip_by_norm_29/mul_1"
  input: "clip_gradient/clip_by_norm_29/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_gradient/clip_by_norm_29"
  op: "Identity"
  input: "clip_gradient/clip_by_norm_29/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire1/conv3x3/kernels/Momentum"
  input: "fire1/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire1/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire1/conv3x3/biases/Momentum"
  input: "fire1/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire1/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire1/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire1/bn/beta/Momentum"
  input: "fire1/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire1/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
}
node {
  name: "fire1/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire1/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire1/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire1/bn/gamma/Momentum"
  input: "fire1/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire1/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire1/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire2/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire2/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire2/conv3x3/kernels/Momentum"
  input: "fire2/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire2/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire2/conv3x3/biases/Momentum"
  input: "fire2/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire2/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire2/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire2/bn/beta/Momentum"
  input: "fire2/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire2/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
}
node {
  name: "fire2/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire2/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire2/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire2/bn/gamma/Momentum"
  input: "fire2/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire2/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire2/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire3/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire3/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire3/conv3x3/kernels/Momentum"
  input: "fire3/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire3/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire3/conv3x3/biases/Momentum"
  input: "fire3/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire3/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire3/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire3/bn/beta/Momentum"
  input: "fire3/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire3/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
}
node {
  name: "fire3/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire3/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire3/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire3/bn/gamma/Momentum"
  input: "fire3/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire3/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire3/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire4/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire4/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire4/conv3x3/kernels/Momentum"
  input: "fire4/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire4/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire4/conv3x3/biases/Momentum"
  input: "fire4/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire4/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire4/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire4/bn/beta/Momentum"
  input: "fire4/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire4/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
}
node {
  name: "fire4/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire4/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire4/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire4/bn/gamma/Momentum"
  input: "fire4/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire4/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire4/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire5/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire5/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire5/conv3x3/kernels/Momentum"
  input: "fire5/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire5/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire5/conv3x3/biases/Momentum"
  input: "fire5/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire5/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire5/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire5/bn/beta/Momentum"
  input: "fire5/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire5/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
}
node {
  name: "fire5/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire5/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire5/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire5/bn/gamma/Momentum"
  input: "fire5/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire5/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire5/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire6/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire6/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire6/conv3x3/kernels/Momentum"
  input: "fire6/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire6/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire6/conv3x3/biases/Momentum"
  input: "fire6/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire6/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire6/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire6/bn/beta/Momentum"
  input: "fire6/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire6/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
}
node {
  name: "fire6/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire6/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire6/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire6/bn/gamma/Momentum"
  input: "fire6/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire6/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire6/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fire7/conv3x3/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fire7/conv3x3/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum/Assign"
  op: "Assign"
  input: "fire7/conv3x3/kernels/Momentum"
  input: "fire7/conv3x3/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/Momentum/read"
  op: "Identity"
  input: "fire7/conv3x3/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Momentum/Assign"
  op: "Assign"
  input: "fire7/conv3x3/biases/Momentum"
  input: "fire7/conv3x3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/conv3x3/biases/Momentum/read"
  op: "Identity"
  input: "fire7/conv3x3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
}
node {
  name: "fire7/bn/beta/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/beta/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/beta/Momentum/Assign"
  op: "Assign"
  input: "fire7/bn/beta/Momentum"
  input: "fire7/bn/beta/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/beta/Momentum/read"
  op: "Identity"
  input: "fire7/bn/beta/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
}
node {
  name: "fire7/bn/gamma/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fire7/bn/gamma/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fire7/bn/gamma/Momentum/Assign"
  op: "Assign"
  input: "fire7/bn/gamma/Momentum"
  input: "fire7/bn/gamma/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fire7/bn/gamma/Momentum/read"
  op: "Identity"
  input: "fire7/bn/gamma/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
}
node {
  name: "conv12/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/kernels/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/kernels/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv12/kernels/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv12/kernels/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/kernels/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/kernels/Momentum/Assign"
  op: "Assign"
  input: "conv12/kernels/Momentum"
  input: "conv12/kernels/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/kernels/Momentum/read"
  op: "Identity"
  input: "conv12/kernels/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
}
node {
  name: "conv12/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/biases/Momentum/Assign"
  op: "Assign"
  input: "conv12/biases/Momentum"
  input: "conv12/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/biases/Momentum/read"
  op: "Identity"
  input: "conv12/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
}
node {
  name: "Momentum/momentum"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Momentum/update_fire1/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire1/conv3x3/kernels"
  input: "fire1/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire1/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire1/conv3x3/biases"
  input: "fire1/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_1"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire1/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire1/bn/beta"
  input: "fire1/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_2"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire1/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire1/bn/gamma"
  input: "fire1/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_3"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire2/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire2/conv3x3/kernels"
  input: "fire2/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_4"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire2/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire2/conv3x3/biases"
  input: "fire2/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_5"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire2/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire2/bn/beta"
  input: "fire2/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_6"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire2/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire2/bn/gamma"
  input: "fire2/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_7"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire3/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire3/conv3x3/kernels"
  input: "fire3/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_8"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire3/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire3/conv3x3/biases"
  input: "fire3/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_9"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire3/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire3/bn/beta"
  input: "fire3/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_10"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire3/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire3/bn/gamma"
  input: "fire3/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_11"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire4/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire4/conv3x3/kernels"
  input: "fire4/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_12"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire4/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire4/conv3x3/biases"
  input: "fire4/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_13"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire4/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire4/bn/beta"
  input: "fire4/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_14"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire4/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire4/bn/gamma"
  input: "fire4/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_15"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire5/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire5/conv3x3/kernels"
  input: "fire5/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_16"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire5/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire5/conv3x3/biases"
  input: "fire5/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_17"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire5/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire5/bn/beta"
  input: "fire5/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_18"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire5/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire5/bn/gamma"
  input: "fire5/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_19"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire6/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire6/conv3x3/kernels"
  input: "fire6/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_20"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire6/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire6/conv3x3/biases"
  input: "fire6/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_21"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire6/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire6/bn/beta"
  input: "fire6/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_22"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire6/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire6/bn/gamma"
  input: "fire6/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_23"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire7/conv3x3/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire7/conv3x3/kernels"
  input: "fire7/conv3x3/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_24"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire7/conv3x3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire7/conv3x3/biases"
  input: "fire7/conv3x3/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_25"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire7/bn/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire7/bn/beta"
  input: "fire7/bn/beta/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_26"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fire7/bn/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fire7/bn/gamma"
  input: "fire7/bn/gamma/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_27"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv12/kernels/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv12/kernels"
  input: "conv12/kernels/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_28"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv12/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv12/biases"
  input: "conv12/biases/Momentum"
  input: "ExponentialDecay"
  input: "clip_gradient/clip_by_norm_29"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update"
  op: "NoOp"
  input: "^Momentum/update_conv12/biases/ApplyMomentum"
  input: "^Momentum/update_conv12/kernels/ApplyMomentum"
  input: "^Momentum/update_fire1/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire1/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire1/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire1/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire2/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire2/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire2/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire2/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire3/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire3/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire3/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire3/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire4/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire4/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire4/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire4/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire5/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire5/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire5/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire5/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire6/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire6/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire6/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire6/conv3x3/kernels/ApplyMomentum"
  input: "^Momentum/update_fire7/bn/beta/ApplyMomentum"
  input: "^Momentum/update_fire7/bn/gamma/ApplyMomentum"
  input: "^Momentum/update_fire7/conv3x3/biases/ApplyMomentum"
  input: "^Momentum/update_fire7/conv3x3/kernels/ApplyMomentum"
  device: "/device:GPU:0"
}
node {
  name: "Momentum/value"
  op: "Const"
  input: "^Momentum/update"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Momentum"
  op: "AssignAdd"
  input: "global_step"
  input: "Momentum/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fire1/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire1/conv3x3/kernels_1/tag"
  input: "fire1/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire1/conv3x3/biases_1/tag"
  input: "fire1/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire1/bn/beta_1"
  op: "HistogramSummary"
  input: "fire1/bn/beta_1/tag"
  input: "fire1/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire1/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire1/bn/gamma_1/tag"
  input: "fire1/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire2/conv3x3/kernels_1/tag"
  input: "fire2/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire2/conv3x3/biases_1/tag"
  input: "fire2/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire2/bn/beta_1"
  op: "HistogramSummary"
  input: "fire2/bn/beta_1/tag"
  input: "fire2/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire2/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire2/bn/gamma_1/tag"
  input: "fire2/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire3/conv3x3/kernels_1/tag"
  input: "fire3/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire3/conv3x3/biases_1/tag"
  input: "fire3/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire3/bn/beta_1"
  op: "HistogramSummary"
  input: "fire3/bn/beta_1/tag"
  input: "fire3/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire3/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire3/bn/gamma_1/tag"
  input: "fire3/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire4/conv3x3/kernels_1/tag"
  input: "fire4/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire4/conv3x3/biases_1/tag"
  input: "fire4/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire4/bn/beta_1"
  op: "HistogramSummary"
  input: "fire4/bn/beta_1/tag"
  input: "fire4/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire4/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire4/bn/gamma_1/tag"
  input: "fire4/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire5/conv3x3/kernels_1/tag"
  input: "fire5/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire5/conv3x3/biases_1/tag"
  input: "fire5/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire5/bn/beta_1"
  op: "HistogramSummary"
  input: "fire5/bn/beta_1/tag"
  input: "fire5/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire5/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire5/bn/gamma_1/tag"
  input: "fire5/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire6/conv3x3/kernels_1/tag"
  input: "fire6/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire6/conv3x3/biases_1/tag"
  input: "fire6/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire6/bn/beta_1"
  op: "HistogramSummary"
  input: "fire6/bn/beta_1/tag"
  input: "fire6/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire6/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire6/bn/gamma_1/tag"
  input: "fire6/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/conv3x3/kernels_1"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels_1"
  op: "HistogramSummary"
  input: "fire7/conv3x3/kernels_1/tag"
  input: "fire7/conv3x3/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "fire7/conv3x3/biases_1/tag"
  input: "fire7/conv3x3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/beta_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/beta_1"
      }
    }
  }
}
node {
  name: "fire7/bn/beta_1"
  op: "HistogramSummary"
  input: "fire7/bn/beta_1/tag"
  input: "fire7/bn/beta/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/gamma_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/gamma_1"
      }
    }
  }
}
node {
  name: "fire7/bn/gamma_1"
  op: "HistogramSummary"
  input: "fire7/bn/gamma_1/tag"
  input: "fire7/bn/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/kernels_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv12/kernels_1"
      }
    }
  }
}
node {
  name: "conv12/kernels_1"
  op: "HistogramSummary"
  input: "conv12/kernels_1/tag"
  input: "conv12/kernels/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/biases_1/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv12/biases_1"
      }
    }
  }
}
node {
  name: "conv12/biases_1"
  op: "HistogramSummary"
  input: "conv12/biases_1/tag"
  input: "conv12/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire1/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire1/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire1/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire1/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire1/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire1/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire1/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire1/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire1/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire2/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire2/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire2/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire2/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire2/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire2/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire2/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire2/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire2/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire3/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire3/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire3/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire3/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire3/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire3/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire3/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire3/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire3/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire4/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire4/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire4/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire4/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire4/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire4/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire4/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire4/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire4/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire5/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire5/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire5/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire5/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire5/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire5/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire5/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire5/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire5/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire6/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire6/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire6/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire6/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire6/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire6/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire6/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire6/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire6/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/conv3x3/kernels/gradients"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/kernels/gradients"
  op: "HistogramSummary"
  input: "fire7/conv3x3/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/conv3x3/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/conv3x3/biases/gradients"
      }
    }
  }
}
node {
  name: "fire7/conv3x3/biases/gradients"
  op: "HistogramSummary"
  input: "fire7/conv3x3/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/beta/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/beta/gradients"
      }
    }
  }
}
node {
  name: "fire7/bn/beta/gradients"
  op: "HistogramSummary"
  input: "fire7/bn/beta/gradients/tag"
  input: "clip_gradient/clip_by_norm_26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fire7/bn/gamma/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fire7/bn/gamma/gradients"
      }
    }
  }
}
node {
  name: "fire7/bn/gamma/gradients"
  op: "HistogramSummary"
  input: "fire7/bn/gamma/gradients/tag"
  input: "clip_gradient/clip_by_norm_27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/kernels/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv12/kernels/gradients"
      }
    }
  }
}
node {
  name: "conv12/kernels/gradients"
  op: "HistogramSummary"
  input: "conv12/kernels/gradients/tag"
  input: "clip_gradient/clip_by_norm_28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/biases/gradients/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv12/biases/gradients"
      }
    }
  }
}
node {
  name: "conv12/biases/gradients"
  op: "HistogramSummary"
  input: "conv12/biases/gradients/tag"
  input: "clip_gradient/clip_by_norm_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train"
  op: "NoOp"
  input: "^Momentum"
  device: "/device:GPU:0"
}
node {
  name: "image_to_show"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "sample_detection_results/tag"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sample_detection_results"
      }
    }
  }
}
node {
  name: "sample_detection_results"
  op: "ImageSummary"
  input: "sample_detection_results/tag"
  input: "image_to_show"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 20
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 104
          }
        }
        string_val: "conv12/biases"
        string_val: "conv12/biases/Momentum"
        string_val: "conv12/kernels"
        string_val: "conv12/kernels/Momentum"
        string_val: "fire1/bn/beta"
        string_val: "fire1/bn/beta/Momentum"
        string_val: "fire1/bn/fire1/bn/moving_mean/biased"
        string_val: "fire1/bn/fire1/bn/moving_mean/local_step"
        string_val: "fire1/bn/fire1/bn/moving_variance/biased"
        string_val: "fire1/bn/fire1/bn/moving_variance/local_step"
        string_val: "fire1/bn/gamma"
        string_val: "fire1/bn/gamma/Momentum"
        string_val: "fire1/bn/moving_mean"
        string_val: "fire1/bn/moving_variance"
        string_val: "fire1/conv3x3/biases"
        string_val: "fire1/conv3x3/biases/Momentum"
        string_val: "fire1/conv3x3/kernels"
        string_val: "fire1/conv3x3/kernels/Momentum"
        string_val: "fire2/bn/beta"
        string_val: "fire2/bn/beta/Momentum"
        string_val: "fire2/bn/fire2/bn/moving_mean/biased"
        string_val: "fire2/bn/fire2/bn/moving_mean/local_step"
        string_val: "fire2/bn/fire2/bn/moving_variance/biased"
        string_val: "fire2/bn/fire2/bn/moving_variance/local_step"
        string_val: "fire2/bn/gamma"
        string_val: "fire2/bn/gamma/Momentum"
        string_val: "fire2/bn/moving_mean"
        string_val: "fire2/bn/moving_variance"
        string_val: "fire2/conv3x3/biases"
        string_val: "fire2/conv3x3/biases/Momentum"
        string_val: "fire2/conv3x3/kernels"
        string_val: "fire2/conv3x3/kernels/Momentum"
        string_val: "fire3/bn/beta"
        string_val: "fire3/bn/beta/Momentum"
        string_val: "fire3/bn/fire3/bn/moving_mean/biased"
        string_val: "fire3/bn/fire3/bn/moving_mean/local_step"
        string_val: "fire3/bn/fire3/bn/moving_variance/biased"
        string_val: "fire3/bn/fire3/bn/moving_variance/local_step"
        string_val: "fire3/bn/gamma"
        string_val: "fire3/bn/gamma/Momentum"
        string_val: "fire3/bn/moving_mean"
        string_val: "fire3/bn/moving_variance"
        string_val: "fire3/conv3x3/biases"
        string_val: "fire3/conv3x3/biases/Momentum"
        string_val: "fire3/conv3x3/kernels"
        string_val: "fire3/conv3x3/kernels/Momentum"
        string_val: "fire4/bn/beta"
        string_val: "fire4/bn/beta/Momentum"
        string_val: "fire4/bn/fire4/bn/moving_mean/biased"
        string_val: "fire4/bn/fire4/bn/moving_mean/local_step"
        string_val: "fire4/bn/fire4/bn/moving_variance/biased"
        string_val: "fire4/bn/fire4/bn/moving_variance/local_step"
        string_val: "fire4/bn/gamma"
        string_val: "fire4/bn/gamma/Momentum"
        string_val: "fire4/bn/moving_mean"
        string_val: "fire4/bn/moving_variance"
        string_val: "fire4/conv3x3/biases"
        string_val: "fire4/conv3x3/biases/Momentum"
        string_val: "fire4/conv3x3/kernels"
        string_val: "fire4/conv3x3/kernels/Momentum"
        string_val: "fire5/bn/beta"
        string_val: "fire5/bn/beta/Momentum"
        string_val: "fire5/bn/fire5/bn/moving_mean/biased"
        string_val: "fire5/bn/fire5/bn/moving_mean/local_step"
        string_val: "fire5/bn/fire5/bn/moving_variance/biased"
        string_val: "fire5/bn/fire5/bn/moving_variance/local_step"
        string_val: "fire5/bn/gamma"
        string_val: "fire5/bn/gamma/Momentum"
        string_val: "fire5/bn/moving_mean"
        string_val: "fire5/bn/moving_variance"
        string_val: "fire5/conv3x3/biases"
        string_val: "fire5/conv3x3/biases/Momentum"
        string_val: "fire5/conv3x3/kernels"
        string_val: "fire5/conv3x3/kernels/Momentum"
        string_val: "fire6/bn/beta"
        string_val: "fire6/bn/beta/Momentum"
        string_val: "fire6/bn/fire6/bn/moving_mean/biased"
        string_val: "fire6/bn/fire6/bn/moving_mean/local_step"
        string_val: "fire6/bn/fire6/bn/moving_variance/biased"
        string_val: "fire6/bn/fire6/bn/moving_variance/local_step"
        string_val: "fire6/bn/gamma"
        string_val: "fire6/bn/gamma/Momentum"
        string_val: "fire6/bn/moving_mean"
        string_val: "fire6/bn/moving_variance"
        string_val: "fire6/conv3x3/biases"
        string_val: "fire6/conv3x3/biases/Momentum"
        string_val: "fire6/conv3x3/kernels"
        string_val: "fire6/conv3x3/kernels/Momentum"
        string_val: "fire7/bn/beta"
        string_val: "fire7/bn/beta/Momentum"
        string_val: "fire7/bn/fire7/bn/moving_mean/biased"
        string_val: "fire7/bn/fire7/bn/moving_mean/local_step"
        string_val: "fire7/bn/fire7/bn/moving_variance/biased"
        string_val: "fire7/bn/fire7/bn/moving_variance/local_step"
        string_val: "fire7/bn/gamma"
        string_val: "fire7/bn/gamma/Momentum"
        string_val: "fire7/bn/moving_mean"
        string_val: "fire7/bn/moving_variance"
        string_val: "fire7/conv3x3/biases"
        string_val: "fire7/conv3x3/biases/Momentum"
        string_val: "fire7/conv3x3/kernels"
        string_val: "fire7/conv3x3/kernels/Momentum"
        string_val: "global_step"
        string_val: "iou"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 104
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv12/biases"
  input: "conv12/biases/Momentum"
  input: "conv12/kernels"
  input: "conv12/kernels/Momentum"
  input: "fire1/bn/beta"
  input: "fire1/bn/beta/Momentum"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  input: "fire1/bn/gamma"
  input: "fire1/bn/gamma/Momentum"
  input: "fire1/bn/moving_mean"
  input: "fire1/bn/moving_variance"
  input: "fire1/conv3x3/biases"
  input: "fire1/conv3x3/biases/Momentum"
  input: "fire1/conv3x3/kernels"
  input: "fire1/conv3x3/kernels/Momentum"
  input: "fire2/bn/beta"
  input: "fire2/bn/beta/Momentum"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  input: "fire2/bn/gamma"
  input: "fire2/bn/gamma/Momentum"
  input: "fire2/bn/moving_mean"
  input: "fire2/bn/moving_variance"
  input: "fire2/conv3x3/biases"
  input: "fire2/conv3x3/biases/Momentum"
  input: "fire2/conv3x3/kernels"
  input: "fire2/conv3x3/kernels/Momentum"
  input: "fire3/bn/beta"
  input: "fire3/bn/beta/Momentum"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  input: "fire3/bn/gamma"
  input: "fire3/bn/gamma/Momentum"
  input: "fire3/bn/moving_mean"
  input: "fire3/bn/moving_variance"
  input: "fire3/conv3x3/biases"
  input: "fire3/conv3x3/biases/Momentum"
  input: "fire3/conv3x3/kernels"
  input: "fire3/conv3x3/kernels/Momentum"
  input: "fire4/bn/beta"
  input: "fire4/bn/beta/Momentum"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  input: "fire4/bn/gamma"
  input: "fire4/bn/gamma/Momentum"
  input: "fire4/bn/moving_mean"
  input: "fire4/bn/moving_variance"
  input: "fire4/conv3x3/biases"
  input: "fire4/conv3x3/biases/Momentum"
  input: "fire4/conv3x3/kernels"
  input: "fire4/conv3x3/kernels/Momentum"
  input: "fire5/bn/beta"
  input: "fire5/bn/beta/Momentum"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  input: "fire5/bn/gamma"
  input: "fire5/bn/gamma/Momentum"
  input: "fire5/bn/moving_mean"
  input: "fire5/bn/moving_variance"
  input: "fire5/conv3x3/biases"
  input: "fire5/conv3x3/biases/Momentum"
  input: "fire5/conv3x3/kernels"
  input: "fire5/conv3x3/kernels/Momentum"
  input: "fire6/bn/beta"
  input: "fire6/bn/beta/Momentum"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  input: "fire6/bn/gamma"
  input: "fire6/bn/gamma/Momentum"
  input: "fire6/bn/moving_mean"
  input: "fire6/bn/moving_variance"
  input: "fire6/conv3x3/biases"
  input: "fire6/conv3x3/biases/Momentum"
  input: "fire6/conv3x3/kernels"
  input: "fire6/conv3x3/kernels/Momentum"
  input: "fire7/bn/beta"
  input: "fire7/bn/beta/Momentum"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  input: "fire7/bn/gamma"
  input: "fire7/bn/gamma/Momentum"
  input: "fire7/bn/moving_mean"
  input: "fire7/bn/moving_variance"
  input: "fire7/conv3x3/biases"
  input: "fire7/conv3x3/biases/Momentum"
  input: "fire7/conv3x3/kernels"
  input: "fire7/conv3x3/kernels/Momentum"
  input: "global_step"
  input: "iou"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 104
          }
        }
        string_val: "conv12/biases"
        string_val: "conv12/biases/Momentum"
        string_val: "conv12/kernels"
        string_val: "conv12/kernels/Momentum"
        string_val: "fire1/bn/beta"
        string_val: "fire1/bn/beta/Momentum"
        string_val: "fire1/bn/fire1/bn/moving_mean/biased"
        string_val: "fire1/bn/fire1/bn/moving_mean/local_step"
        string_val: "fire1/bn/fire1/bn/moving_variance/biased"
        string_val: "fire1/bn/fire1/bn/moving_variance/local_step"
        string_val: "fire1/bn/gamma"
        string_val: "fire1/bn/gamma/Momentum"
        string_val: "fire1/bn/moving_mean"
        string_val: "fire1/bn/moving_variance"
        string_val: "fire1/conv3x3/biases"
        string_val: "fire1/conv3x3/biases/Momentum"
        string_val: "fire1/conv3x3/kernels"
        string_val: "fire1/conv3x3/kernels/Momentum"
        string_val: "fire2/bn/beta"
        string_val: "fire2/bn/beta/Momentum"
        string_val: "fire2/bn/fire2/bn/moving_mean/biased"
        string_val: "fire2/bn/fire2/bn/moving_mean/local_step"
        string_val: "fire2/bn/fire2/bn/moving_variance/biased"
        string_val: "fire2/bn/fire2/bn/moving_variance/local_step"
        string_val: "fire2/bn/gamma"
        string_val: "fire2/bn/gamma/Momentum"
        string_val: "fire2/bn/moving_mean"
        string_val: "fire2/bn/moving_variance"
        string_val: "fire2/conv3x3/biases"
        string_val: "fire2/conv3x3/biases/Momentum"
        string_val: "fire2/conv3x3/kernels"
        string_val: "fire2/conv3x3/kernels/Momentum"
        string_val: "fire3/bn/beta"
        string_val: "fire3/bn/beta/Momentum"
        string_val: "fire3/bn/fire3/bn/moving_mean/biased"
        string_val: "fire3/bn/fire3/bn/moving_mean/local_step"
        string_val: "fire3/bn/fire3/bn/moving_variance/biased"
        string_val: "fire3/bn/fire3/bn/moving_variance/local_step"
        string_val: "fire3/bn/gamma"
        string_val: "fire3/bn/gamma/Momentum"
        string_val: "fire3/bn/moving_mean"
        string_val: "fire3/bn/moving_variance"
        string_val: "fire3/conv3x3/biases"
        string_val: "fire3/conv3x3/biases/Momentum"
        string_val: "fire3/conv3x3/kernels"
        string_val: "fire3/conv3x3/kernels/Momentum"
        string_val: "fire4/bn/beta"
        string_val: "fire4/bn/beta/Momentum"
        string_val: "fire4/bn/fire4/bn/moving_mean/biased"
        string_val: "fire4/bn/fire4/bn/moving_mean/local_step"
        string_val: "fire4/bn/fire4/bn/moving_variance/biased"
        string_val: "fire4/bn/fire4/bn/moving_variance/local_step"
        string_val: "fire4/bn/gamma"
        string_val: "fire4/bn/gamma/Momentum"
        string_val: "fire4/bn/moving_mean"
        string_val: "fire4/bn/moving_variance"
        string_val: "fire4/conv3x3/biases"
        string_val: "fire4/conv3x3/biases/Momentum"
        string_val: "fire4/conv3x3/kernels"
        string_val: "fire4/conv3x3/kernels/Momentum"
        string_val: "fire5/bn/beta"
        string_val: "fire5/bn/beta/Momentum"
        string_val: "fire5/bn/fire5/bn/moving_mean/biased"
        string_val: "fire5/bn/fire5/bn/moving_mean/local_step"
        string_val: "fire5/bn/fire5/bn/moving_variance/biased"
        string_val: "fire5/bn/fire5/bn/moving_variance/local_step"
        string_val: "fire5/bn/gamma"
        string_val: "fire5/bn/gamma/Momentum"
        string_val: "fire5/bn/moving_mean"
        string_val: "fire5/bn/moving_variance"
        string_val: "fire5/conv3x3/biases"
        string_val: "fire5/conv3x3/biases/Momentum"
        string_val: "fire5/conv3x3/kernels"
        string_val: "fire5/conv3x3/kernels/Momentum"
        string_val: "fire6/bn/beta"
        string_val: "fire6/bn/beta/Momentum"
        string_val: "fire6/bn/fire6/bn/moving_mean/biased"
        string_val: "fire6/bn/fire6/bn/moving_mean/local_step"
        string_val: "fire6/bn/fire6/bn/moving_variance/biased"
        string_val: "fire6/bn/fire6/bn/moving_variance/local_step"
        string_val: "fire6/bn/gamma"
        string_val: "fire6/bn/gamma/Momentum"
        string_val: "fire6/bn/moving_mean"
        string_val: "fire6/bn/moving_variance"
        string_val: "fire6/conv3x3/biases"
        string_val: "fire6/conv3x3/biases/Momentum"
        string_val: "fire6/conv3x3/kernels"
        string_val: "fire6/conv3x3/kernels/Momentum"
        string_val: "fire7/bn/beta"
        string_val: "fire7/bn/beta/Momentum"
        string_val: "fire7/bn/fire7/bn/moving_mean/biased"
        string_val: "fire7/bn/fire7/bn/moving_mean/local_step"
        string_val: "fire7/bn/fire7/bn/moving_variance/biased"
        string_val: "fire7/bn/fire7/bn/moving_variance/local_step"
        string_val: "fire7/bn/gamma"
        string_val: "fire7/bn/gamma/Momentum"
        string_val: "fire7/bn/moving_mean"
        string_val: "fire7/bn/moving_variance"
        string_val: "fire7/conv3x3/biases"
        string_val: "fire7/conv3x3/biases/Momentum"
        string_val: "fire7/conv3x3/kernels"
        string_val: "fire7/conv3x3/kernels/Momentum"
        string_val: "global_step"
        string_val: "iou"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 104
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv12/biases"
  input: "save/RestoreV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv12/biases/Momentum"
  input: "save/RestoreV2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv12/kernels"
  input: "save/RestoreV2:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv12/kernels/Momentum"
  input: "save/RestoreV2:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fire1/bn/beta"
  input: "save/RestoreV2:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fire1/bn/beta/Momentum"
  input: "save/RestoreV2:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_mean/biased"
  input: "save/RestoreV2:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_mean/local_step"
  input: "save/RestoreV2:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_variance/biased"
  input: "save/RestoreV2:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fire1/bn/fire1/bn/moving_variance/local_step"
  input: "save/RestoreV2:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fire1/bn/gamma"
  input: "save/RestoreV2:10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fire1/bn/gamma/Momentum"
  input: "save/RestoreV2:11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fire1/bn/moving_mean"
  input: "save/RestoreV2:12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fire1/bn/moving_variance"
  input: "save/RestoreV2:13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "fire1/conv3x3/biases"
  input: "save/RestoreV2:14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "fire1/conv3x3/biases/Momentum"
  input: "save/RestoreV2:15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "fire1/conv3x3/kernels"
  input: "save/RestoreV2:16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "fire1/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire1/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "fire2/bn/beta"
  input: "save/RestoreV2:18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "fire2/bn/beta/Momentum"
  input: "save/RestoreV2:19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_mean/biased"
  input: "save/RestoreV2:20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_mean/local_step"
  input: "save/RestoreV2:21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_variance/biased"
  input: "save/RestoreV2:22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "fire2/bn/fire2/bn/moving_variance/local_step"
  input: "save/RestoreV2:23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "fire2/bn/gamma"
  input: "save/RestoreV2:24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "fire2/bn/gamma/Momentum"
  input: "save/RestoreV2:25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "fire2/bn/moving_mean"
  input: "save/RestoreV2:26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "fire2/bn/moving_variance"
  input: "save/RestoreV2:27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "fire2/conv3x3/biases"
  input: "save/RestoreV2:28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "fire2/conv3x3/biases/Momentum"
  input: "save/RestoreV2:29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "fire2/conv3x3/kernels"
  input: "save/RestoreV2:30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "fire2/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire2/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "fire3/bn/beta"
  input: "save/RestoreV2:32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "fire3/bn/beta/Momentum"
  input: "save/RestoreV2:33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_mean/biased"
  input: "save/RestoreV2:34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_mean/local_step"
  input: "save/RestoreV2:35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_variance/biased"
  input: "save/RestoreV2:36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "fire3/bn/fire3/bn/moving_variance/local_step"
  input: "save/RestoreV2:37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "fire3/bn/gamma"
  input: "save/RestoreV2:38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "fire3/bn/gamma/Momentum"
  input: "save/RestoreV2:39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "fire3/bn/moving_mean"
  input: "save/RestoreV2:40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "fire3/bn/moving_variance"
  input: "save/RestoreV2:41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "fire3/conv3x3/biases"
  input: "save/RestoreV2:42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "fire3/conv3x3/biases/Momentum"
  input: "save/RestoreV2:43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "fire3/conv3x3/kernels"
  input: "save/RestoreV2:44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "fire3/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire3/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "fire4/bn/beta"
  input: "save/RestoreV2:46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "fire4/bn/beta/Momentum"
  input: "save/RestoreV2:47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_mean/biased"
  input: "save/RestoreV2:48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_mean/local_step"
  input: "save/RestoreV2:49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_variance/biased"
  input: "save/RestoreV2:50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "fire4/bn/fire4/bn/moving_variance/local_step"
  input: "save/RestoreV2:51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "fire4/bn/gamma"
  input: "save/RestoreV2:52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "fire4/bn/gamma/Momentum"
  input: "save/RestoreV2:53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "fire4/bn/moving_mean"
  input: "save/RestoreV2:54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "fire4/bn/moving_variance"
  input: "save/RestoreV2:55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "fire4/conv3x3/biases"
  input: "save/RestoreV2:56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "fire4/conv3x3/biases/Momentum"
  input: "save/RestoreV2:57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "fire4/conv3x3/kernels"
  input: "save/RestoreV2:58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "fire4/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire4/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "fire5/bn/beta"
  input: "save/RestoreV2:60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "fire5/bn/beta/Momentum"
  input: "save/RestoreV2:61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_mean/biased"
  input: "save/RestoreV2:62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_mean/local_step"
  input: "save/RestoreV2:63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_variance/biased"
  input: "save/RestoreV2:64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "fire5/bn/fire5/bn/moving_variance/local_step"
  input: "save/RestoreV2:65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "fire5/bn/gamma"
  input: "save/RestoreV2:66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "fire5/bn/gamma/Momentum"
  input: "save/RestoreV2:67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "fire5/bn/moving_mean"
  input: "save/RestoreV2:68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "fire5/bn/moving_variance"
  input: "save/RestoreV2:69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "fire5/conv3x3/biases"
  input: "save/RestoreV2:70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "fire5/conv3x3/biases/Momentum"
  input: "save/RestoreV2:71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "fire5/conv3x3/kernels"
  input: "save/RestoreV2:72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "fire5/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire5/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "fire6/bn/beta"
  input: "save/RestoreV2:74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "fire6/bn/beta/Momentum"
  input: "save/RestoreV2:75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_mean/biased"
  input: "save/RestoreV2:76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_mean/local_step"
  input: "save/RestoreV2:77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_variance/biased"
  input: "save/RestoreV2:78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "fire6/bn/fire6/bn/moving_variance/local_step"
  input: "save/RestoreV2:79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "fire6/bn/gamma"
  input: "save/RestoreV2:80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "fire6/bn/gamma/Momentum"
  input: "save/RestoreV2:81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "fire6/bn/moving_mean"
  input: "save/RestoreV2:82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "fire6/bn/moving_variance"
  input: "save/RestoreV2:83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "fire6/conv3x3/biases"
  input: "save/RestoreV2:84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "fire6/conv3x3/biases/Momentum"
  input: "save/RestoreV2:85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "fire6/conv3x3/kernels"
  input: "save/RestoreV2:86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "fire6/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire6/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "fire7/bn/beta"
  input: "save/RestoreV2:88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "fire7/bn/beta/Momentum"
  input: "save/RestoreV2:89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_mean/biased"
  input: "save/RestoreV2:90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_mean/local_step"
  input: "save/RestoreV2:91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_variance/biased"
  input: "save/RestoreV2:92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "fire7/bn/fire7/bn/moving_variance/local_step"
  input: "save/RestoreV2:93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "fire7/bn/gamma"
  input: "save/RestoreV2:94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "fire7/bn/gamma/Momentum"
  input: "save/RestoreV2:95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "fire7/bn/moving_mean"
  input: "save/RestoreV2:96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "fire7/bn/moving_variance"
  input: "save/RestoreV2:97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "fire7/conv3x3/biases"
  input: "save/RestoreV2:98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "fire7/conv3x3/biases/Momentum"
  input: "save/RestoreV2:99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "fire7/conv3x3/kernels"
  input: "save/RestoreV2:100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "fire7/conv3x3/kernels/Momentum"
  input: "save/RestoreV2:101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fire7/conv3x3/kernels"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "iou"
  input: "save/RestoreV2:103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iou"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  device: "/device:GPU:0"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "batch/fraction_of_100_full"
  input: "fire1/before_bn"
  input: "fire1/bn/bn_gamma"
  input: "fire1/bn/bn_beta"
  input: "fire1/before_relu"
  input: "fire1/after_relu"
  input: "fire1/pool_1"
  input: "fire2/before_bn"
  input: "fire2/bn/bn_gamma"
  input: "fire2/bn/bn_beta"
  input: "fire2/before_relu"
  input: "fire2/after_relu"
  input: "fire2/pool"
  input: "fire3/before_bn"
  input: "fire3/bn/bn_gamma"
  input: "fire3/bn/bn_beta"
  input: "fire3/before_relu"
  input: "fire3/after_relu"
  input: "fire3/pool_1"
  input: "fire4/before_bn"
  input: "fire4/bn/bn_gamma"
  input: "fire4/bn/bn_beta"
  input: "fire4/before_relu"
  input: "fire4/after_relu"
  input: "fire4/pool"
  input: "fire5/before_bn"
  input: "fire5/bn/bn_gamma"
  input: "fire5/bn/bn_beta"
  input: "fire5/before_relu"
  input: "fire5/after_relu"
  input: "fire5/pool_1"
  input: "fire6/before_bn"
  input: "fire6/bn/bn_gamma"
  input: "fire6/bn/bn_beta"
  input: "fire6/before_relu"
  input: "fire6/after_relu"
  input: "fire6/pool"
  input: "fire7/before_bn"
  input: "fire7/bn/bn_gamma"
  input: "fire7/bn/bn_beta"
  input: "fire7/before_relu"
  input: "fire7/after_relu"
  input: "fire7/pool_1"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/sparsity"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/average"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/max"
  input: "bbox/stretching/activation_summary/activation_summary/delta_x/min"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/sparsity"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/average"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/max"
  input: "bbox/stretching/activation_summary_1/activation_summary/delta_y/min"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/sparsity"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/average"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/max"
  input: "bbox/stretching/activation_summary_2/activation_summary/delta_w/min"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/sparsity"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/average"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/max"
  input: "bbox/stretching/activation_summary_3/activation_summary/delta_h/min"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/sparsity"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/average"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/max"
  input: "bbox/stretching/activation_summary_4/activation_summary/bbox_cx/min"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/sparsity"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/average"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/max"
  input: "bbox/stretching/activation_summary_5/activation_summary/bbox_cy/min"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/sparsity"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/average"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/max"
  input: "bbox/stretching/activation_summary_6/activation_summary/bbox_width/min"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/sparsity"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/average"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/max"
  input: "bbox/stretching/activation_summary_7/activation_summary/bbox_height/min"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/sparsity"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/average"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/max"
  input: "bbox/trimming/activation_summary/activation_summary/box_xmin/min"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/sparsity"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/average"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/max"
  input: "bbox/trimming/activation_summary_1/activation_summary/box_ymin/min"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/sparsity"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/average"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/max"
  input: "bbox/trimming/activation_summary_2/activation_summary/box_xmax/min"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/sparsity"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/average"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/max"
  input: "bbox/trimming/activation_summary_3/activation_summary/box_ymax/min"
  input: "IOU_1/activation_summary/activation_summary/conf_score"
  input: "IOU_1/activation_summary/activation_summary/conf_score/sparsity"
  input: "IOU_1/activation_summary/activation_summary/conf_score/average"
  input: "IOU_1/activation_summary/activation_summary/conf_score/max"
  input: "IOU_1/activation_summary/activation_summary/conf_score/min"
  input: "probability/activation_summary/activation_summary/class_probs"
  input: "probability/activation_summary/activation_summary/class_probs/sparsity"
  input: "probability/activation_summary/activation_summary/class_probs/average"
  input: "probability/activation_summary/activation_summary/class_probs/max"
  input: "probability/activation_summary/activation_summary/class_probs/min"
  input: "probability/activation_summary_1/activation_summary/final_class_prob"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/sparsity"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/average"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/max"
  input: "probability/activation_summary_1/activation_summary/final_class_prob/min"
  input: "confidence_score_regression/mean_iou"
  input: "learning_rate"
  input: "fire1/conv3x3/weight_loss_1"
  input: "fire2/conv3x3/weight_loss_1"
  input: "fire3/conv3x3/weight_loss_1"
  input: "fire4/conv3x3/weight_loss_1"
  input: "fire5/conv3x3/weight_loss_1"
  input: "fire6/conv3x3/weight_loss_1"
  input: "fire7/conv3x3/weight_loss_1"
  input: "conv12/weight_loss_1"
  input: "class_regression/class_loss_1"
  input: "confidence_score_regression/confidence_loss_1"
  input: "bounding_box_regression/bbox_loss_1"
  input: "total_loss_1"
  input: "fire1/conv3x3/kernels_1"
  input: "fire1/conv3x3/biases_1"
  input: "fire1/bn/beta_1"
  input: "fire1/bn/gamma_1"
  input: "fire2/conv3x3/kernels_1"
  input: "fire2/conv3x3/biases_1"
  input: "fire2/bn/beta_1"
  input: "fire2/bn/gamma_1"
  input: "fire3/conv3x3/kernels_1"
  input: "fire3/conv3x3/biases_1"
  input: "fire3/bn/beta_1"
  input: "fire3/bn/gamma_1"
  input: "fire4/conv3x3/kernels_1"
  input: "fire4/conv3x3/biases_1"
  input: "fire4/bn/beta_1"
  input: "fire4/bn/gamma_1"
  input: "fire5/conv3x3/kernels_1"
  input: "fire5/conv3x3/biases_1"
  input: "fire5/bn/beta_1"
  input: "fire5/bn/gamma_1"
  input: "fire6/conv3x3/kernels_1"
  input: "fire6/conv3x3/biases_1"
  input: "fire6/bn/beta_1"
  input: "fire6/bn/gamma_1"
  input: "fire7/conv3x3/kernels_1"
  input: "fire7/conv3x3/biases_1"
  input: "fire7/bn/beta_1"
  input: "fire7/bn/gamma_1"
  input: "conv12/kernels_1"
  input: "conv12/biases_1"
  input: "fire1/conv3x3/kernels/gradients"
  input: "fire1/conv3x3/biases/gradients"
  input: "fire1/bn/beta/gradients"
  input: "fire1/bn/gamma/gradients"
  input: "fire2/conv3x3/kernels/gradients"
  input: "fire2/conv3x3/biases/gradients"
  input: "fire2/bn/beta/gradients"
  input: "fire2/bn/gamma/gradients"
  input: "fire3/conv3x3/kernels/gradients"
  input: "fire3/conv3x3/biases/gradients"
  input: "fire3/bn/beta/gradients"
  input: "fire3/bn/gamma/gradients"
  input: "fire4/conv3x3/kernels/gradients"
  input: "fire4/conv3x3/biases/gradients"
  input: "fire4/bn/beta/gradients"
  input: "fire4/bn/gamma/gradients"
  input: "fire5/conv3x3/kernels/gradients"
  input: "fire5/conv3x3/biases/gradients"
  input: "fire5/bn/beta/gradients"
  input: "fire5/bn/gamma/gradients"
  input: "fire6/conv3x3/kernels/gradients"
  input: "fire6/conv3x3/biases/gradients"
  input: "fire6/bn/beta/gradients"
  input: "fire6/bn/gamma/gradients"
  input: "fire7/conv3x3/kernels/gradients"
  input: "fire7/conv3x3/biases/gradients"
  input: "fire7/bn/beta/gradients"
  input: "fire7/bn/gamma/gradients"
  input: "conv12/kernels/gradients"
  input: "conv12/biases/gradients"
  attr {
    key: "N"
    value {
      i: 192
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv12/biases/Assign"
  input: "^conv12/biases/Momentum/Assign"
  input: "^conv12/kernels/Assign"
  input: "^conv12/kernels/Momentum/Assign"
  input: "^fire1/bn/beta/Assign"
  input: "^fire1/bn/beta/Momentum/Assign"
  input: "^fire1/bn/fire1/bn/moving_mean/biased/Assign"
  input: "^fire1/bn/fire1/bn/moving_mean/local_step/Assign"
  input: "^fire1/bn/fire1/bn/moving_variance/biased/Assign"
  input: "^fire1/bn/fire1/bn/moving_variance/local_step/Assign"
  input: "^fire1/bn/gamma/Assign"
  input: "^fire1/bn/gamma/Momentum/Assign"
  input: "^fire1/bn/moving_mean/Assign"
  input: "^fire1/bn/moving_variance/Assign"
  input: "^fire1/conv3x3/biases/Assign"
  input: "^fire1/conv3x3/biases/Momentum/Assign"
  input: "^fire1/conv3x3/kernels/Assign"
  input: "^fire1/conv3x3/kernels/Momentum/Assign"
  input: "^fire2/bn/beta/Assign"
  input: "^fire2/bn/beta/Momentum/Assign"
  input: "^fire2/bn/fire2/bn/moving_mean/biased/Assign"
  input: "^fire2/bn/fire2/bn/moving_mean/local_step/Assign"
  input: "^fire2/bn/fire2/bn/moving_variance/biased/Assign"
  input: "^fire2/bn/fire2/bn/moving_variance/local_step/Assign"
  input: "^fire2/bn/gamma/Assign"
  input: "^fire2/bn/gamma/Momentum/Assign"
  input: "^fire2/bn/moving_mean/Assign"
  input: "^fire2/bn/moving_variance/Assign"
  input: "^fire2/conv3x3/biases/Assign"
  input: "^fire2/conv3x3/biases/Momentum/Assign"
  input: "^fire2/conv3x3/kernels/Assign"
  input: "^fire2/conv3x3/kernels/Momentum/Assign"
  input: "^fire3/bn/beta/Assign"
  input: "^fire3/bn/beta/Momentum/Assign"
  input: "^fire3/bn/fire3/bn/moving_mean/biased/Assign"
  input: "^fire3/bn/fire3/bn/moving_mean/local_step/Assign"
  input: "^fire3/bn/fire3/bn/moving_variance/biased/Assign"
  input: "^fire3/bn/fire3/bn/moving_variance/local_step/Assign"
  input: "^fire3/bn/gamma/Assign"
  input: "^fire3/bn/gamma/Momentum/Assign"
  input: "^fire3/bn/moving_mean/Assign"
  input: "^fire3/bn/moving_variance/Assign"
  input: "^fire3/conv3x3/biases/Assign"
  input: "^fire3/conv3x3/biases/Momentum/Assign"
  input: "^fire3/conv3x3/kernels/Assign"
  input: "^fire3/conv3x3/kernels/Momentum/Assign"
  input: "^fire4/bn/beta/Assign"
  input: "^fire4/bn/beta/Momentum/Assign"
  input: "^fire4/bn/fire4/bn/moving_mean/biased/Assign"
  input: "^fire4/bn/fire4/bn/moving_mean/local_step/Assign"
  input: "^fire4/bn/fire4/bn/moving_variance/biased/Assign"
  input: "^fire4/bn/fire4/bn/moving_variance/local_step/Assign"
  input: "^fire4/bn/gamma/Assign"
  input: "^fire4/bn/gamma/Momentum/Assign"
  input: "^fire4/bn/moving_mean/Assign"
  input: "^fire4/bn/moving_variance/Assign"
  input: "^fire4/conv3x3/biases/Assign"
  input: "^fire4/conv3x3/biases/Momentum/Assign"
  input: "^fire4/conv3x3/kernels/Assign"
  input: "^fire4/conv3x3/kernels/Momentum/Assign"
  input: "^fire5/bn/beta/Assign"
  input: "^fire5/bn/beta/Momentum/Assign"
  input: "^fire5/bn/fire5/bn/moving_mean/biased/Assign"
  input: "^fire5/bn/fire5/bn/moving_mean/local_step/Assign"
  input: "^fire5/bn/fire5/bn/moving_variance/biased/Assign"
  input: "^fire5/bn/fire5/bn/moving_variance/local_step/Assign"
  input: "^fire5/bn/gamma/Assign"
  input: "^fire5/bn/gamma/Momentum/Assign"
  input: "^fire5/bn/moving_mean/Assign"
  input: "^fire5/bn/moving_variance/Assign"
  input: "^fire5/conv3x3/biases/Assign"
  input: "^fire5/conv3x3/biases/Momentum/Assign"
  input: "^fire5/conv3x3/kernels/Assign"
  input: "^fire5/conv3x3/kernels/Momentum/Assign"
  input: "^fire6/bn/beta/Assign"
  input: "^fire6/bn/beta/Momentum/Assign"
  input: "^fire6/bn/fire6/bn/moving_mean/biased/Assign"
  input: "^fire6/bn/fire6/bn/moving_mean/local_step/Assign"
  input: "^fire6/bn/fire6/bn/moving_variance/biased/Assign"
  input: "^fire6/bn/fire6/bn/moving_variance/local_step/Assign"
  input: "^fire6/bn/gamma/Assign"
  input: "^fire6/bn/gamma/Momentum/Assign"
  input: "^fire6/bn/moving_mean/Assign"
  input: "^fire6/bn/moving_variance/Assign"
  input: "^fire6/conv3x3/biases/Assign"
  input: "^fire6/conv3x3/biases/Momentum/Assign"
  input: "^fire6/conv3x3/kernels/Assign"
  input: "^fire6/conv3x3/kernels/Momentum/Assign"
  input: "^fire7/bn/beta/Assign"
  input: "^fire7/bn/beta/Momentum/Assign"
  input: "^fire7/bn/fire7/bn/moving_mean/biased/Assign"
  input: "^fire7/bn/fire7/bn/moving_mean/local_step/Assign"
  input: "^fire7/bn/fire7/bn/moving_variance/biased/Assign"
  input: "^fire7/bn/fire7/bn/moving_variance/local_step/Assign"
  input: "^fire7/bn/gamma/Assign"
  input: "^fire7/bn/gamma/Momentum/Assign"
  input: "^fire7/bn/moving_mean/Assign"
  input: "^fire7/bn/moving_variance/Assign"
  input: "^fire7/conv3x3/biases/Assign"
  input: "^fire7/conv3x3/biases/Momentum/Assign"
  input: "^fire7/conv3x3/kernels/Assign"
  input: "^fire7/conv3x3/kernels/Momentum/Assign"
  input: "^global_step/Assign"
  input: "^iou/Assign"
  device: "/device:GPU:0"
}
versions {
  producer: 27
}
